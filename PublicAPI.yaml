swagger: '2.0'
info:
  description: |
    URL для http запроса
    рабочая среда https://solutions.worldclass.ru/API/hs/external
    тестовая среда https://tsolutions.worldclass.ru/API/hs/external
  version: '1.0'
  title: API WorldClass
  termsOfService: ''
  contact:
    email: SupportKPO@wclass.ru
host: tsolutions.worldclass.ru
basePath: /API/hs/external
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: General
  - name: Customers
  - name: Membership
  - name: Information
  - name: Schedules
  - name: Lists
  - name: Events
  - name: Games
  - name: Payment
  - name: Service
  - name: Cache
  - name: KPO
  - name: Polls
  - name: Rooms
  - name: NetMonet
  - name: All methods
paths:
  /general/config:
    post:
      summary: инф. о токене сеанса (CONNECT)
      tags:
        - General
      description: Информация о токене сеанса и актуальной версии приложения
      consumes: []
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              appType:
                type: string
                description: тип приложения
                enum:
                  - Customer
                  - Employee
              systemType:
                type: string
                description: тип операционной системы
                enum:
                  - Android
                  - iOS
                  - Web
                example: iOS
            required:
              - appType
              - systemType
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - minVersion
            type: object
            properties:
              minVersion:
                type: integer
                description: номер минимально необходимой версии
              tokenInfo:
                type: object
                description: 'описание токена сеанса, при условии, что был передан auth-key'
                properties:
                  appType:
                    type: string
                    description: тип приложения
                    enum:
                      - Customer
                      - Employee
                  appVersion:
                    type: integer
                    description: версия приложения
                  chainCode:
                    type: integer
                    description: код сети
                  deviceModel:
                    type: string
                    description: модель устройства
                  deviceToken:
                    type: string
                    description: токен устройства
                  systemType:
                    type: string
                    description: тип операционной системы
                    enum:
                      - Android
                      - iOS
                      - Web
                  systemVersion:
                    type: string
                    description: версия операционной системы
        '401':
          description: токен не валиден
      operationId: config
    x-restlet:
      section: General
    parameters: []
  /general/registerDevice:
    post:
      summary: регистрация устройства (CONNECT)
      tags:
        - General
      description: 'Регистрирует устройство в личном кабинете, возвращает токен сеанса. Дальнейшая авторизация всех запросов от устройства проходит по данному токену.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              appType:
                type: string
                description: тип приложения
                enum:
                  - Customer
                  - Employee
                  - Web
              appVersion:
                type: integer
                default: 101
                description: версия приложения
              chainCode:
                type: integer
                default: 1
                description: код сети
              deviceModel:
                type: string
                description: модель устройства
                example: iPhone 7
              deviceToken:
                type: string
                description: токен устройства
                example: 2d181c7d7289b049a2a735b1e1f6e94c72354ea686ab9f09d280e6619046e70a
              systemType:
                type: string
                description: тип операционной системы
                enum:
                  - Android
                  - iOS
                  - Web
                example: iOS
              systemVersion:
                type: string
                description: версия операционной системы
                example: '12.2'
              timeStamp:
                type: integer
                description: штамп времени
                example: 123456789
              hash:
                type: string
                description: hash
                example: e3ef5eb30be420ecc0309ff0ebba2c8fabdfbd7ae5a6d71387e9d20c32f739aa
            required:
              - appType
              - appVersion
              - chainCode
              - deviceModel
              - deviceToken
              - systemType
              - systemVersion
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - token
            type: object
            properties:
              token:
                type: string
                description: ключ авторизации (токен)
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            description: '[описание ошибок](https://wclass.restlet.io/#text_______)'
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - noDeviceToken
                  - noSystemVersion
                  - noAppVersion
              description:
                type: string
                description: описание ошибки
      operationId: registerDevice
    x-restlet:
      section: General
    parameters: []
  /general/signIn:
    post:
      summary: авторизация пользователя (CONNECT)
      tags:
        - General
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              phone:
                type: string
                description: номер телефона
                example: '+79154006161'
              chainCode:
                type: number
                default: 1
                description: код сети
            required:
              - phone
              - chainCode
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - result
              - retryTime
              - token
            type: object
            properties:
              result:
                type: string
                description: Ok
                enum:
                  - Ok
                  - Fail
              retryTime:
                type: integer
                description: количество минут до следующей отправки
              token:
                type: string
                description: ключ авторизации (токен)
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - noUserPhone
                  - noChain
              description:
                type: string
                description: описание ошибки
      description: авторизация пользователя
      operationId: signIn
    x-restlet:
      section: General
    parameters: []
  /general/confirmPhone:
    post:
      summary: подтверждение пароля (CONNECT)
      tags:
        - General
      description: ввод пароля из смс
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                description: код подтверждения из смс
                example: '7954'
            required:
              - password
          x-examples:
            example: '{"password": "7954"}'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              userProfile:
                type: object
                description: профиль пользователя
                required:
                  - registrationDate
                  - phone
                  - birthday
                  - firstName
                  - secondName
                  - lastName
                  - gender
                  - email
                  - status
                  - canUpdatePersonalData
                  - photo
                  - rating
                  - subscriptionEmail
                  - subscriptionSms
                  - barcode
                  - uid
                properties:
                  registrationDate:
                    type: string
                    format: date
                    description: дата регистрации в ЛК
                  phone:
                    type: string
                    description: телефон
                  birthday:
                    type: string
                    format: date
                    description: дата рождения
                  firstName:
                    type: string
                    description: имя
                  secondName:
                    type: string
                    description: отчество
                  lastName:
                    type: string
                    description: фамилия
                  gender:
                    type: string
                    description: пол
                    enum:
                      - male
                      - female
                      - none
                  email:
                    type: string
                    description: электронный адрес
                  status:
                    type: string
                    description: статус пользователя connect
                    enum:
                      - active
                      - missingPersonalData
                      - unauthorized
                  canUpdatePersonalData:
                    type: boolean
                    description: Флаг разрешающий обновлять персональные данные
                  photo:
                    type: string
                    description: URL фотографии
                  rating:
                    type: string
                    description: рейтинг
                  subscriptionEmail:
                    type: boolean
                    description: подписка на письма
                  subscriptionSms:
                    type: boolean
                    description: подписка на смс
                  barcode:
                    type: string
                    description: штрихкод
                  uid:
                    type: string
                    description: идентификатор
              userList:
                type: array
                description: 'список пользователей с одинаковым номером телефона в учетной . системе. Если список пуст, значит был только один пользователь с этим номером'
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: представление пользователя
                    uid:
                      type: string
                      description: идентификатор пользователя
                  required:
                    - name
                    - uid
              token:
                type: string
                description: ключ авторизации (токен)
            required:
              - userProfile
              - userList
              - token
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - passwordError
                  - passwordExpired
                  - passwordNotCorrect
                  - passwordRequired
              description:
                type: string
                description: описание ошибки
      operationId: confirmPhone
    x-restlet:
      section: General
    parameters: []
  /general/addUserToToken:
    post:
      summary: добавление пользователя в токен (CONNECT)
      tags:
        - General
      description: происходит связка токена с пользователем
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор пользователя
                example: 51c390fc-d63c-11e6-8218-005056b15e5d
            required:
              - uid
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - token
              - userProfile
            type: object
            properties:
              userProfile:
                required:
                  - birthday
                  - canUpdatePersonalData
                  - email
                  - firstName
                  - gender
                  - lastName
                  - phone
                  - photo
                  - registrationDate
                  - secondName
                  - status
                type: object
                description: профиль пользователя
                properties:
                  registrationDate:
                    type: string
                    format: date
                    description: дата регистрации в ЛК
                  phone:
                    type: string
                    description: телефон
                  birthday:
                    type: string
                    format: date
                    description: дата рождения
                  firstName:
                    type: string
                    description: имя
                  secondName:
                    type: string
                    description: отчество
                  lastName:
                    type: string
                    description: фамилия
                  gender:
                    type: string
                    description: пол
                    enum:
                      - male
                      - female
                      - none
                  email:
                    type: string
                    description: электронный адрес
                  status:
                    type: string
                    description: статус пользователя connect
                    enum:
                      - active
                      - missingPersonalData
                      - unauthorized
                  canUpdatePersonalData:
                    type: boolean
                    description: Флаг разрешающий обновлять персональные данные
                  photo:
                    type: string
                    description: URL фотографии
              token:
                type: string
                description: ключ авторизации (токен)
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - passwordError
                  - passwordExpired
                  - passwordNotCorrect
                  - passwordRequired
              description:
                type: string
                description: описание ошибки
      operationId: addUserToToken
    x-restlet:
      section: General
    parameters: []
  /general/singOut:
    post:
      summary: выход пользователя из токена (CONNECT)
      tags:
        - General
      description: Удаление пользователя из токена
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - token
            type: object
            properties:
              token:
                type: string
                description: ключ авторизации (токен)
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: singOut
    x-restlet:
      section: General
    parameters: []
  /user/accountProfile:
    post:
      summary: профиль пользователя connect (CONNECT)
      description: Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: accountProfile
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              registrationDate:
                type: string
                format: date
                description: Дата регистрации в ЛК
              phone:
                type: string
                description: Номер телефона
              birthday:
                type: string
                format: date
                description: Дата рождения
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              lastName:
                type: string
                description: Фамилия
              gender:
                type: string
                description: Пол
                enum:
                  - male
                  - female
                  - none
              email:
                type: string
                description: электронный адрес
              status:
                type: string
                description: статус пользователя connect
                enum:
                  - active
                  - missingPersonalData
                  - unauthorized
              canUpdatePersonalData:
                type: boolean
                description: Флаг разрешающий обновлять персональные данные
              photo:
                type: string
                description: URL фотографии
            required:
              - registrationDate
              - phone
              - birthday
              - firstName
              - secondName
              - lastName
              - gender
              - email
              - status
              - canUpdatePersonalData
              - photo
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - userNotfound
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: accountProfile
    x-restlet:
      section: Users
    parameters: []
  /user/userProfile:
    post:
      summary: профиль пользователя (CONNECT)
      description: Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: userProfile
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              registrationDate:
                type: string
                format: date
                description: Дата регистрации в ЛК
              birthday:
                type: string
                format: date
                description: Дата рождения
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              lastName:
                type: string
                description: Фамилия
              code:
                type: string
                description: код клиента
              barcode:
                type: string
                description: Штрикод
              gender:
                type: string
                description: Пол
                enum:
                  - male
                  - female
                  - none
              phone:
                type: string
                description: Номер телефона
              email:
                type: string
                description: электронный адрес
              subscriptionEmail:
                type: boolean
                description: Согласие на email рассылку
              subscriptionSms:
                type: boolean
                description: Согласие на sms рассылку
              status:
                type: string
                description: статус пользователя connect
                enum:
                  - active
                  - missingPersonalData
                  - unauthorized
              rating:
                type: string
                description: 'Рейтинг клиента, в программе лояльности'
              canUpdatePersonalData:
                type: boolean
                description: Флаг разрешающий обновлять персональные данные
              photo:
                type: string
                description: URL фотографии
              specialList:
                type: boolean
                description: Признак нахождения клиента в черном списке
              personalManager:
                type: object
                description: персональный менеджер
                properties:
                  firstName:
                    type: string
                    description: имя
                  secondName:
                    type: string
                    description: отчество
                  lastName:
                    type: string
                    description: фамилия
                  email:
                    type: string
                    description: электронный адрес
                  phone:
                    type: string
                    description: номер телефона
                  photo:
                    type: string
                    description: URL фотографии
                required:
                  - firstName
                  - secondName
                  - lastName
                  - email
                  - phone
                  - photo
              uid:
                type: string
                description: идентификатор клиента
            required:
              - registrationDate
              - birthday
              - firstName
              - secondName
              - lastName
              - barcode
              - gender
              - phone
              - email
              - subscriptionEmail
              - subscriptionSms
              - status
              - rating
              - canUpdatePersonalData
              - photo
              - uid
          examples: {}
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: userProfile
    x-restlet:
      section: Users
    parameters: []
  /user/userSummary:
    post:
      summary: суммарная информация по пользователю (CONNECT)
      description: Ответственный .
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: userSummary
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              balance:
                type: number
                description: баланс лицевого счета пользователя
              bonus:
                type: number
                description: баланс бонусного счета пользователя
              paymentService:
                type: object
                description: количество услуг подлежащих оплате
                properties:
                  quantity:
                    type: number
                    description: количество
                  amount:
                    type: number
                    description: сумма
                required:
                  - quantity
                  - amount
              membershipList:
                type: array
                description: список абонементов
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description: статус абонемента
                      enum:
                        - active - активирован
                        - frozen - заморожен
                        - notActive - не активирован
                        - locked - заблокирован
                        - waitActivation - ожидание активации
                        - expired - закончившийся
                    quantity:
                      type: number
                      description: Количество
                    expirationDate:
                      type: string
                      format: date
                      description: дата окончания действия/заморозки абонемента
                    paymentStatus:
                      type: string
                      enum:
                        - paid
                        - waitConfirmPaid
                        - waitPaid
                    useType:
                      type: string
                      enum:
                        - forUse
                        - forTransmission
                  required:
                    - status
                    - quantity
                    - expirationDate
                    - paymentStatus
                    - useType
              packageList:
                type: array
                description: список пакетов
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description: статус пакета
                    quantity:
                      type: number
                      description: Количество
                    expirationDate:
                      type: string
                      format: date
                      description: дата окончания действия пакета
                    reserve:
                      type: number
                      description: зарезервировано
                  required:
                    - status
                    - quantity
                    - expirationDate
                    - reserve
              rentedLockerList:
                type: array
                description: список арендованных шкафчиков
                items:
                  type: object
                  properties:
                    locker:
                      type: string
                      description: наименование шкафа/ячейки
                    expirationDate:
                      type: string
                      format: date
                      description: Дата окончания аренды
                  required:
                    - locker
                    - expirationDate
              financialHistory:
                type: string
                description: история финансовых операций
              support:
                type: string
                description: поддержка
              reserveBalance:
                type: number
                description: заразервировано с депозита
            required:
              - reserveBalance
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: userSummary
    x-restlet:
      section: Users
    parameters: []
  /customers/paymentServiceList:
    post:
      summary: список услуг к оплате - 6.1
      description: |-
        Метод возвращает список неоплаченных документов продаж/счетов по услугам клиента

        Ответственный IT
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: paymentServiceList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in:  body
          required: false
          schema:
            type: object
            properties:
              uidList:
                type: array
                description: 'список идентификаторов заявок на оплату (если заполнен, то информация только по заявкам из списка)'
                items:
                  type: string
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
                type: object
                properties:
                  date:
                    type: string
                    description: Дата время оказания/продажи услуги
                  docId:
                    type: string
                    description: идентификатор документа продажи/счета
                    minLength: 36
                    maxLength: 36
                  docType:
                    type: string
                    description: тип документа
                    enum:
                      - invoice - чек
                      - personal - персональная тренировка
                      - group - групповой урок
                  docName:
                    type: string
                    description: наименование документа(для СПА)
                  amount:
                    type: number
                    description: сумма
                  discountedAmount:
                    type: number
                    description: сумма со скидкой
                  gym:
                    type: object
                    description: клуб
                    required:
                      - uid
                      - name
                    properties:
                      uid:
                        type: string
                        description: идентификатор клуба
                        minLength: 36
                        maxLength: 36
                      name:
                        type: string
                        description: наименование клуба
                  employee:
                      type: object
                      properties:
                        uid:
                          type: string
                          description: идентификатор тренера
                        firstName:
                          type: string
                          description: Имя сотрудника
                        secondName:
                          type: string
                          description: Фамилия сотрудника
                        photo:
                          type: string
                          description: ссылка на фото
                  serviceList:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: наименование описания услуги
                        quantity:
                          type: number
                          description: количество
                        price:
                          type: number
                          description: прайсовая цена
                        amount:
                          type: number
                          description: сумма
                        photo:
                          type: string
                          description: ссылка на фото услуги
                      required:
                        - name
                        - quantity
                        - price
                        - amount
                  customer:
                    type: string
                    description: Для поддержки строй версии (фамиля имя клиента)
                  customerObject:
                    type: object
                    description: если долг не клиента а его ребенка
                    properties:
                      uid:
                        type: string
                        description: идентификатор клиента
                      name:
                        type: string
                        description: 'фамилия, имя клиента'
                    required:
                      - uid
                      - name
                required:
                  - docId
                  - docType
                  - amount
                  - discountedAmount
                  - gym
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: paymentServiceList
    x-restlet:
      section: Customers
    parameters: []
  /customers/membershipList:
    post:
      summary: cписок абонементов - 8.1; 8.2
      description: |-
        Метод возвращает список оформленных абонементов, по которым не истех срок и где пользователь является клиентом или владельцем

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              customerType:
                type: string
                default: self
                description: 'тип клиента абонемента, показывает в каком качестве для абонемента выступает пользователь ЛК'
                enum:
                  - self
                  - other
                  - self&other
                example: self
              requestType:
                type: string
                description: 'тип запроса'
                enum:
                  - firstActual
                example: firstActual
              uidList:
                type: array
                description: 'список идентификаторов контрактов (если заполнен, то информация только контрактов из списка)'
                items:
                  type: string
            required:
              - customerType
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор абонемента
                code:
                  type: string
                  description: номер/код абонемента
                name:
                  type: string
                  description: наименование абонемента
                shortDiscription:
                  type: string
                  description: краткое описание абонемента
                paymentStatus:
                  type: string
                  description: статус оплаты
                  enum:
                    - paid - 100% оплачен
                    - waiting
                    - confirming
                status:
                  type: string
                  description: Статус абонемента
                  enum:
                    - active - активирован
                    - frozen - заморожен
                    - paused - приостановлен
                    - inactive - не активирован
                    - locked - заблокирован
                    - pending - ожидание активации
                    - expired - закончившийся
                duration:
                  type: integer
                  description: длительность
                startDate:
                  type: string
                  format: date
                  description: дата начала действия абонемента
                endDate:
                  type: string
                  format: date
                  description: дата окончания действия абонемента
                freezingEndDate:
                  type: string
                  format: date
                  description: дата окончания заморозки
                freezing:
                  type: number
                  description: количество оставшихся дней заморозки
                serviceQuantity:
                  type: number
                  description: 'количество услуг, включенных в абонемент'
                photo:
                  type: string
                  description: URL фотографии
                useType:
                  type: string
                  description: тип использования абонемента
                  enum:
                    - forUse - для использования
                    - forTransfer
                experience:
                  type: string
                  description: стаж клиента
                  enum:
                    - New
                    - Renew
                    - Ex
                owner:
                  type: object
                  description: Владелец абонемента
                  required:
                    - uid
                    - name
                  properties:
                    uid:
                      type: string
                      description: идентификатор контрагента
                    name:
                      type: string
                      description: наименование контрагента
                gymList:
                  type: array
                  description: список клубов доступа
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор клуба
                      name:
                        type: string
                        description: наименование
                      main:
                        type: boolean
                        description: флаг показывающий является ли данный клуб основным по абонементу
                    required:
                      - uid
                      - name
                      - main
                paymentSchedule:
                  type: array
                  description: график платежей
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                        description: дата платежа
                      amount:
                        type: number
                        description: оставшаяся сумма платежа
                    required:
                      - date
                      - amount
                customerList:
                  type: array
                  description: список клиентов
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор клиента
                      name:
                        type: string
                        description: наименование клиента
                      main:
                        type: boolean
                        description: флаг показывающий является ли данный клуб основным по абонементу
                    required:
                      - uid
                      - name
                      - main
                freezingStartDate:
                  type: string
                  format: date
                  description: дата начала заморозки
                canPurchaseFreezing:
                  type: boolean
                  description: возможность приобретения заморозки
                minFreezingAmount:
                  type: number
                  description: Минимальное количество дней для новой заморозки
                activationDate:
                  type: string
                  description: Дата автоактивации абонемента
                  format: date
              required:
                - uid
                - code
                - name
                - shortDiscription
                - paymentStatus
                - status
                - duration
                - serviceQuantity
                - photo
                - useType
                - owner
                - gymList
                - paymentSchedule
                - customerList
                - canPurchaseFreezing
                - experience
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - result
              - description
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Membership
      operationId: membershipList
    x-restlet:
      section: Customers
    parameters: []
  /customers/membershipServiceList:
    post:
      summary: список услуг и подарков абонемента - 8.4
      description: |-
        Метод возвращает список услуг и подарков, включенных в абонемемент

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipServiceList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор абонемента
                example: 4f1225f6-cb40-11e9-bba8-005056b11c47
            required:
              - uid
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
              type: object
              properties:
                serviceList:
                  type: array
                  description: список услуг включенных в абонемент
                  items:
                    $ref: '#/definitions/service'
                giftList:
                  type: array
                  description: список подарков по абонементу
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор подарка
                      name:
                        type: string
                        description: наименование подарка
                      description:
                        type: string
                        description: описание подарка
                      quantity:
                        type: integer
                        description: количество
                      photo:
                        type: string
                        description: URL фотографии
                      type:
                        type: string
                        description: тип подарка
                        enum:
                          - service
                          - discount
                          - bonus
                          - freezing
                          - membership
                          - access
                    required:
                      - uid
                      - name
                      - description
                      - quantity
                      - photo
                      - type
              required:
                - serviceList
                - giftList
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Membership
      operationId: membershipServiceList
    x-restlet:
      section: Customers
    parameters: []
  /customers/financialHistory:
    post:
      summary: история финансовых операций - 12.1; 12.2
      description: |-
        Метод возвращает список финансовых операций за заданных период времени.

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: financialHistory
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - endDate
              - startDate
            properties:
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T00:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-31T23:59:59'
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: время операции
                doc:
                  type: object
                  description: документ
                  required:
                    - uid
                    - name
                    - docType
                  properties:
                    uid:
                      type: string
                      description: идентификатор документа
                    name:
                      type: string
                      description: наименование документа
                    docType:
                      type: string
                      description: тип документа
                amount:
                  type: number
                  description: сумма документа
                serviceList:
                  type: array
                  description: список оплаченных услуг
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование услуги
                      amount:
                        type: number
                        description: сумма
                    required:
                      - name
                      - amount
                paymentList:
                  type: array
                  description: список способов оплаты
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование способа оплаты
                      amount:
                        type: number
                        description: сумма
                      holder:
                        type: string
                        description: 'владелец ресурса, с которого осуществляется оплата'
                    required:
                      - name
                      - amount
                type:
                  type: string
                  description: тип операции
                  enum:
                    - payment
                    - refund
                direction:
                  type: string
                  description: вид движения (приход/расход)
                  enum:
                    - income
                    - expense
              required:
                - date
                - doc
                - amount
                - serviceList
                - paymentList
                - type
          examples:
            application/json: список финансовых операций
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: financialHistory
    x-restlet:
      section: Customers
    parameters: []
  /customers/bonusHistory:
    post:
      summary: история бонусных операций
      description: |-
        Метод возвращает список бонусных операций за заданных период времени.

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: bonusHistory
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - endDate
              - startDate
            properties:
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T00:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-31T23:59:59'
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - amount
                - date
                - name
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: время операции
                name:
                  type: string
                  description: наименование услуги
                amount:
                  type: number
                  description: сумма
          examples:
            application/json: список финансовых операций
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: bonusHistory
    x-restlet:
      section: Customers
    parameters: []
  /customers/contractHistory:
    post:
      summary: история контракта
      description: |-
        Метод возвращает список опреций по контракту(Продажа, Активация, Заморозка, Передача, Отказ от содоступа, Заявка на возврат контракта, Заявка на возврат денежных средств, Отказ от доп пакета, Изменение клубов доступа)

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: contractHistory
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - uid
            properties:
              uid:
                type: string
                format: string
                description: идентификатор контракта
                example:
          x-examples: { }
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - operation
                - date
                - description
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: дата операции
                operation:
                  type: string
                  description: наименование операции
                description:
                  type: string
                  description: описание операции
          examples:
            application/json: список финансовых операций
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: contractHistory
    x-restlet:
      section: Customers
    parameters: [ ]
  /customers/familyAccount:
    post:
      summary: семейный счет - 11.1
      description: |-
        Метод возвращает список подключенных третьих лиц к авансам пользователя ЛК, и список авансов, третьих лиц к которым подключен пользователь ЛК

        Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: familyAccount
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            required:
              - accountUsers
              - availableAccounts
            type: object
            properties:
              accountUsers:
                type: array
                description: пользователи моего счета
                items:
                  required:
                    - accountList
                    - name
                    - uid
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор клиента
                    name:
                      type: string
                      description: наименование клиента
                    accountList:
                      type: array
                      description: список доступных счетов
                      items:
                        required:
                          - accountType
                          - used
                        type: object
                        properties:
                          accountType:
                            type: string
                            description: вид семейного счета (вид ресурса)
                            enum:
                              - paymentCard
                              - bonus
                              - deposit
                          account:
                            required:
                              - name
                              - uid
                            type: object
                            description: семейный счет (ресурс)
                            properties:
                              uid:
                                type: string
                                description: идентификатор ресурса
                              name:
                                type: string
                                description: наименование
                          used:
                            type: boolean
                            description: флаг использования
              availableAccounts:
                type: array
                description: доступные счета
                items:
                  required:
                    - name
                    - uid
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор клиента
                    name:
                      type: string
                      description: наименование клиента
                    accountList:
                      type: array
                      description: список доступных счетов
                      items:
                        required:
                          - accountType
                        type: object
                        properties:
                          accountType:
                            type: string
                            description: вид семейного счета (вид ресурса)
                            enum:
                              - paymentCard
                              - bonus
                              - deposit
                          account:
                            required:
                              - name
                              - uid
                            type: object
                            description: семейный счет (ресурс)
                            properties:
                              uid:
                                type: string
                                description: идентификатор ресурса
                              name:
                                type: string
                                description: наименование
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: familyAccount
    x-restlet:
      section: Customers
    parameters: []
  /customers/relatedCustomersProfile:
    post:
      summary: связанные клиенты - 8.12.1
      description: |-
        Возвращает список связанных клиентов

        Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: relatedCustomersProfile
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - name
                - relateType
                - uid
                - firstname
                - lastname
                - middlename
                - balance
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор клиента
                name:
                  type: string
                  description: наименование клиента
                relateType:
                  type: string
                  description: тип связи
                firstname:
                  type: string
                  description: имя клиента
                lastname:
                  type: string
                  description: фамилия клиента
                middlename:
                  type: string
                  description: отчество клиента
                balance:
                  type: string
                  description: баланс из кэша
          examples:
            application/json: список связанных клиентов
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: relatedCustomers
    x-restlet:
      section: Customers
    parameters: []
  /customers/rentedLockerList:
    post:
      summary: список арендованных ячеек - 10.1
      description: |-
        Возвращает список арендованных ячеек

        Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: rentedLockerList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - endDate
                - gym
                - name
                - room
                - startDate
                - type
                - uid
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор шкафа/ячейки
                name:
                  type: string
                  description: Наименование шкафа ячейки
                type:
                  type: string
                  description: тип шкафа ячейки
                  enum:
                    - locker
                    - safe
                gym:
                  required:
                    - gymId
                    - name
                  type: object
                  description: клуб
                  properties:
                    gymId:
                      type: string
                      description: Идентификатор клуба
                    name:
                      type: string
                      description: Наименование клуба
                room:
                  required:
                    - name
                    - uid
                  type: object
                  description: помещение
                  properties:
                    uid:
                      type: string
                      description: идентификатор помещения
                    name:
                      type: string
                      description: Наименование помещения
                startDate:
                  type: string
                  format: date
                  description: дата начала аренды
                endDate:
                  type: string
                  format: date
                  description: дата окончания аренды
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: rentedLockerList
    x-restlet:
      section: Customers
    parameters: []
  /customers/availableLockerList:
    post:
      summary: список доступных для аренды ячеек
      description: |-
        Возвращает список доступных для аренды ячеек

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: availableLockerList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - gymId
              - roomId
              - type
            properties:
              gymId:
                type: string
                description: идентификатор клуба
              roomId:
                type: string
                description: идентификатор помещения
              type:
                type: string
                description: тип шкафа/ячейки
                enum:
                  - locker
                  - safe
              lockerId:
                type: string
                description: идентификатор шкафа/ячейки
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - name
                - price
                - priceType
                - startDate
                - endDate
                - serviceId
                - type
                - uid
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор шкафа/ячейки
                name:
                  type: string
                  description: наименование шкафа/ячейки
                type:
                  type: string
                  description: тип шкафа/ячейки
                  enum:
                    - locker
                    - safe
                price:
                  type: number
                  description: цена
                priceType:
                  type: string
                  description: тип цены
                  enum:
                    - month
                    - day
                startDate:
                  type: string
                  format: date
                  description: минимальная дата начала аренды
                endDate:
                  type: string
                  format: date
                  description: максимальная дата начала аренды
                serviceId:
                  type: string
                  description: идентификатор номенклатуры аренды
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: availableLockerList
    x-restlet:
      section: Customers
    parameters: []
  /info/employeeInfo:
    post:
      summary: описание сотрудника - 21.2 (CONNECT)
      description: |-
        Возвращает описание сотрудника

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: employeeInfo
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Идентификатор сотрудника
                example: 0460b50a-d3c7-11e4-80d3-005056810138
            required:
              - uid
          x-examples:
            example:
              gymId: cc35e9b2-d155-11e4-80d1-005056810138
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор сотрудника
              firstName:
                type: string
                description: Имя
              lastName:
                type: string
                description: 'Фамилия  '
              isMyCoach:
                type: boolean
                description: это мой персональный тренер
              presentation:
                type: array
                items:
                  type: object
                  properties:
                    section:
                      type: string
                      description: раздел описания
                    description:
                      type: array
                      description: массив строк описания
                      items:
                        type: string
                  required:
                    - section
                    - description
              photos:
                type: array
                description: список URL фотографий
                items:
                  type: string
              objectiveList:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор цели
                    name:
                      type: string
                      description: наименование цели
                    color:
                      type: string
                      description: цвет
              tagList:
                type: array
                description: список тегов
                items:
                  $ref: '#/definitions/tag'
              gender:
                type: string
                description: пол сотрудника
                enum:
                  - male
                  - female
              employeeCode:
                type: string
                description: код сотрудника
            required:
              - uid
              - firstName
              - lastName
              - isMyCoach
              - presentation
              - photos
              - tagList
              - gender
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
      operationId: employeeInfo
    x-restlet:
      section: Information
    parameters: []
  /info/membershipPriceInfo:
    post:
      summary: описание абонемента для покупки - 8.6; 8.7
      description: |-
        Возвращает описанеи абонемента,

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipPriceInfo
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              uid:
                type: string
                description: идентификатор номенклатуры
              uidDescription:
                type: string
                description: идентификатор описания номенклатуры
              customer:
                type: string
                description: идентифиикатор клиента
            required:
              - gymId
              - uid
              - uidDescription
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              fullDescription:
                type: string
                description: полное описание абонемента
              photoList:
                type: array
                description: список URL фотографий
                items:
                  type: string
              paymentSchedule:
                type: array
                description: график платежей
                items:
                  type: object
                  properties:
                    paymentNumber:
                      type: number
                      description: номер платежа
                    amount:
                      type: integer
                      description: цена
                    amountDiscount:
                      type: integer
                      description: цено со скидкой
                  required:
                    - paymentNumber
                    - amount
                    - amountDiscount
              serviceList:
                type: array
                description: список услуг
                items:
                  $ref: '#/definitions/service'
              giftList:
                type: array
                description: список подарков
                items:
                  type: object
                  properties:
                    uidGiftGroup:
                      type: string
                      description: идентификатор группы подарков
                    nameGiftGroup:
                      type: string
                      description: наименование группы подарков
                    availableQuantity:
                      type: number
                      description: количество подарков из группы
                    giftGroupList:
                      type: array
                      description: расшифровка группы подарков
                      items:
                        type: object
                        properties:
                          giftName:
                            type: string
                            description: наименование подарка
                          giftType:
                            type: string
                            description: тип подарка
                            enum:
                              - service
                              - discount
                              - bonus
                              - freezing
                              - membership
                              - access
                              - membershipAndFreezing
                          quantity:
                            type: number
                            description: количество подарков
                          gymList:
                            type: array
                            description: список клубов
                            items:
                              type: object
                              properties:
                                uid:
                                  type: string
                                  description: идентификатор клуба
                                name:
                                  type: string
                                  description: наименование клуба
                              required:
                                - uid
                                - name
                          giftUid:
                            type: string
                            description: идентификатор подарка
                        required:
                          - giftName
                          - giftType
                          - giftUid
                    typeGiftGroup:
                      type: string
                      description: тип группы подарков
                      enum:
                        - discount
                        - gift
                        - giftChoose
                    uidDiscount:
                      type: string
                      description: идентификатор скидки
                  required:
                    - uidGiftGroup
                    - nameGiftGroup
                    - availableQuantity
                    - giftGroupList
                    - typeGiftGroup
                    - uidDiscount
              gymList:
                type: array
                description: Список доступных клубов
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Идентификатор клуба
                    name:
                      type: string
                      description: Наименование клуба
                    main:
                      type: boolean
                      description: Основной клуб абонемента
                  required:
                    - uid
                    - name
                    - main
              paymentType:
                type: string
                description: тип оплаты
                enum:
                  - subscribe
                  - installment
                  - prepayment
                  - postpay
              available:
                type: boolean
                description: 'доступность покупки абонемента '
              accessTimeLimit:
                type: string
                description: описание ограничений на посещение клуба по абонементу
              ageCategory:
                type: string
                description: возрастная категория клиента
            required:
              - fullDescription
              - photoList
              - giftList
              - gymList
              - paymentType
              - available
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
        - Membership
      operationId: membershipPriceInfo
    x-restlet:
      section: Information
    parameters: []
  /schedules/gymSchedule:
    post:
      summary: расписание занятий в клубе/клубах - 18.1 (CONNECT)
      description: |-
        Возвращает расписание групповых программ в клубе/клубах

        Точки входа в метод:
        1. Непосредственно по кнопке в командной панели
        2. Из описания сотрудника
        3. Из описания услуги

          
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: gymSchedule
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymList:
                type: array
                default:
                  - cc35e9c2-d155-11e4-80d1-005056810138
                description: список идентификаторов клубов
                items:
                  type: string
              startDate:
                type: string
                description: дата начала
                format: date
                example: '2019-10-01T13:00:00'
              endDate:
                type: string
                description: дата окончания
                format: date
                example: '2019-10-15T00:00:00'
              serviceDescriptionId:
                type: string
                default: ''
                description: идентификатор описания услуги
              employeeId:
                type: string
                default: ''
                description: идентификатор сотрудника
              docId:
                type: string
                description: идентификатор документа
            required:
              - gymList
              - startDate
              - endDate
          x-examples: {}
          description: ''
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymList:
                type: array
                description: список идентификаторов клубов
                items:
                  type: string
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T13:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-15T00:00:00'
              serviceDescriptionId:
                type: string
                description: идентификатор описания услуги
              employeeId:
                type: string
                description: идентификатор сотрудника
            required:
              - gymList
              - startDate
              - endDate
          x-examples:
            example-1: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                docId:
                  type: string
                  description: идентификатор документа группового занятия
                date:
                  description: время начала группового занятия
                  type: string
                service:
                  type: object
                  description: описание услуги
                  required:
                    - uid
                    - name
                    - shortDescription
                    - photo
                    - tagList
                  properties:
                    uid:
                      type: string
                      description: идентификатор описания услуги
                    name:
                      type: string
                      description: наименование описания услуги
                    shortDescription:
                      type: string
                      description: краткое описания услуги
                    photo:
                      type: string
                      description: URL фотографии
                    tagList:
                      type: array
                      description: теги
                      items:
                        $ref: '#/definitions/tag'
                isPreBooked:
                  type: boolean
                  description: требуется предварительная запись
                isPrePaid:
                  type: boolean
                  description: требуется предварительная оплата
                onlyWithParents:
                  type: boolean
                  description: при обязательном участии родителей
                onlyMembers:
                  type: boolean
                  description: только члены клуба
                duration:
                  type: number
                  description: длительность занятия
                employee:
                  type: object
                  description: сотрудник
                  required:
                    - uid
                    - firstName
                    - lastName
                  properties:
                    uid:
                      type: string
                      description: идентификатор сотрудника
                    firstName:
                      type: string
                      description: имя
                    lastName:
                      type: string
                      description: фамилия
                room:
                  type: object
                  description: наименование помещения
                  required:
                    - uid
                    - name
                    - latitude
                    - longitude
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                    latitude:
                      type: number
                    longitude:
                      type: number
                ageMin:
                  type: number
                  description: 'минимальный возраст,  в месяцах'
                ageMax:
                  type: number
                  description: 'максимальный возраст,  в месяцах'
                studentLevel:
                  type: string
                  description: уровень подготовки
                  enum:
                    - any
                    - high
                    - medium
                    - beginner
                serviceKindName:
                  type: string
                  description: вид деятельности
                gym:
                  type: object
                  description: клуб
                  required:
                    - uid
                    - name
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                recorded:
                  type: boolean
                  description: клиент записан на урок
                canCancel:
                  type: boolean
                  description: клиент может отменить запись на урок
                canRecord:
                  type: boolean
                  description: клиент может записаться на урок
                availablePlaces:
                  type: number
                  description: количество доступных мест
                price:
                  type: number
                  description: 'цена, если 0, то ставим неопределено'
                externalRefs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: тип ресурса
                        enum:
                          - youtube
                          - instagram
                      ref:
                        type: string
                        description: ссылка на ресурс
                    required:
                      - type
                      - ref
                urlZoom:
                  type: string
                  description: ссылка на Zoom
              required:
                - docId
                - date
                - service
                - isPreBooked
                - isPrePaid
                - onlyWithParents
                - onlyMembers
                - duration
                - employee
                - room
                - ageMin
                - ageMax
                - studentLevel
                - serviceKindName
                - gym
                - recorded
                - canCancel
                - canRecord
                - availablePlaces
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Schedules
      operationId: gymSchedule
    x-restlet:
      section: Schedules
    parameters: []
  /schedules/gymScheduleNew:
    post:
      summary: расписание занятий в клубе/клубах - 18.1 (CONNECT)
      description: |-
        Возвращает расписание групповых программ в клубе/клубах

        Точки входа в метод:
        1. Непосредственно по кнопке в командной панели
        2. Из описания сотрудника
        3. Из описания услуги

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: gymScheduleNew
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymList:
                type: array
                default:
                  - cc35e9c2-d155-11e4-80d1-005056810138
                description: список идентификаторов клубов
                items:
                  type: string
              startDate:
                type: string
                description: дата начала
                format: date
                example: '2019-10-01T13:00:00'
              endDate:
                type: string
                description: дата окончания
                format: date
                example: '2019-10-15T00:00:00'
              serviceDescriptionId:
                type: string
                default: ''
                description: идентификатор описания услуги
              employeeId:
                type: string
                default: ''
                description: идентификатор сотрудника
              docId:
                type: string
                description: идентификатор документа
            required:
              - gymList
              - startDate
              - endDate
          x-examples: { }
          description: ''
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymList:
                type: array
                description: список идентификаторов клубов
                items:
                  type: string
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T13:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-15T00:00:00'
              serviceDescriptionId:
                type: string
                description: идентификатор описания услуги
              groupType:
                type: string
                enum:
                  - gym
                  - online
                  - outdoor
                  - studio
                description: тип клуба
              employeeId:
                type: string
                description: идентификатор сотрудника
            required:
              - gymList
              - startDate
              - endDate
          x-examples:
            example-1: { }
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                docId:
                  type: string
                  description: идентификатор документа группового занятия
                date:
                  description: время начала группового занятия
                  type: string
                groupType:
                  description: тип клуба
                  type: string
                  enum:
                    - gym
                    - online
                    - studio
                    - outdoor
                service:
                  type: object
                  description: описание услуги
                  required:
                    - uid
                    - name
                    - shortDescription
                    - photo
                    - tagList
                  properties:
                    uid:
                      type: string
                      description: идентификатор описания услуги
                    name:
                      type: string
                      description: наименование описания услуги
                    shortDescription:
                      type: string
                      description: краткое описания услуги
                    photo:
                      type: string
                      description: URL фотографии
                    objectiveList:
                      type: array
                      items:
                        type: object
                        properties:
                          uid:
                            type: string
                            description: идентификатор цели
                          name:
                            type: string
                            description: наименование цели
                          color:
                            type: string
                            description: цвет
                    tagList:
                      type: array
                      description: теги
                      items:
                        $ref: '#/definitions/tag'
                isPreBooked:
                  type: boolean
                  description: требуется предварительная запись
                isPrePaid:
                  type: boolean
                  description: требуется предварительная оплата
                onlyWithParents:
                  type: boolean
                  description: при обязательном участии родителей
                onlyMembers:
                  type: boolean
                  description: только члены клуба
                duration:
                  type: number
                  description: длительность занятия
                employee:
                  type: object
                  description: сотрудник
                  required:
                    - uid
                    - firstName
                    - lastName
                  properties:
                    uid:
                      type: string
                      description: идентификатор сотрудника
                    firstName:
                      type: string
                      description: имя
                    lastName:
                      type: string
                      description: фамилия
                    objectiveList:
                      type: array
                      items:
                        type: object
                        properties:
                          uid:
                            type: string
                            description: идентификатор цели
                          name:
                            type: string
                            description: наименование цели
                          color:
                            type: string
                            description: цвет
                room:
                  type: object
                  description: наименование помещения
                  required:
                    - uid
                    - name
                    - latitude
                    - longitude
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                    latitude:
                      type: number
                    longitude:
                      type: number
                ageMin:
                  type: number
                  description: 'минимальный возраст,  в месяцах'
                ageMax:
                  type: number
                  description: 'максимальный возраст,  в месяцах'
                studentLevel:
                  type: string
                  description: уровень подготовки
                  enum:
                    - any
                    - high
                    - medium
                    - beginner
                serviceKindName:
                  type: string
                  description: вид деятельности
                gym:
                  type: object
                  description: клуб
                  required:
                    - uid
                    - name
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                recorded:
                  type: boolean
                  description: клиент записан на урок
                canCancel:
                  type: boolean
                  description: клиент может отменить запись на урок
                cancelPeriod:
                  type: number
                  description: количество времени за которое можно отменить занятие в секундах
                canRecord:
                  type: boolean
                  description: клиент может записаться на урок
                availablePlaces:
                  type: number
                  description: количество доступных мест
                price:
                  type: number
                  description: 'цена, если 0, то ставим неопределено'
                externalRefs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: тип ресурса
                        enum:
                          - youtube
                          - instagram
                      ref:
                        type: string
                        description: ссылка на ресурс
                    required:
                      - type
                      - ref
                urlZoom:
                  type: string
                  description: ссылка на Zoom
              required:
                - docId
                - date
                - service
                - isPreBooked
                - isPrePaid
                - onlyWithParents
                - onlyMembers
                - duration
                - employee
                - room
                - ageMin
                - ageMax
                - studentLevel
                - serviceKindName
                - gym
                - recorded
                - canCancel
                - canRecord
                - availablePlaces
                - groupType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Schedules
      operationId: gymScheduleNew
    x-restlet:
      section: Schedules
    parameters: [ ]
  /schedules/userActivity:
    post:
      summary: активности пользователя 15.1
      description: |-
        отображает список всех активностей пользователя за период (посещение, тренировки, услуги СПА)

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: userActivity
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - endDate
              - startDate
            properties:
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T13:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-15T00:00:00'
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  description: дата начала
                endDate:
                  type: string
                  format: date
                  description: дата окончания
                gym:
                  type: object
                  description: клуб
                  required:
                    - uid
                    - name
                  properties:
                    uid:
                      type: string
                      description: идентификатор клуба
                    name:
                      type: string
                      description: наименование клуба
                room:
                  type: object
                  description: помещение
                  properties:
                    uid:
                      type: string
                      description: идентификатор помещения
                    name:
                      type: string
                      description: наименование
                  required:
                    - uid
                    - name
                serviceList:
                  type: array
                  description: список услуг
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор описания услуги
                      name:
                        description: наименование описания услуги
                        type: string
                      debt:
                        type: boolean
                        description: долг
                      quantity:
                        type: integer
                        description: Количество услуг
                    required:
                      - uid
                      - name
                      - debt
                      - quantity
                employee:
                  type: object
                  description: сотрудник
                  properties:
                    uid:
                      type: string
                      description: уникальный идентификатор
                    firstName:
                      type: string
                      description: имя
                    lastName:
                      type: string
                      description: фамилия
                  required:
                    - uid
                    - firstName
                    - lastName
                docId:
                  type: string
                  description: Идентификатор документа (для расшифровки)
                docType:
                  type: string
                  description: Тип документа (для расшифровки)
                  enum:
                    - personal
                    - group
                    - visit
                    - guestVisit
              required:
                - startDate
                - endDate
                - gym
                - serviceList
                - docId
                - docType
          examples:
            application/json: список активностей
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Schedules
      operationId: userActivity
    x-restlet:
      section: Schedules
    parameters: []
  /schedules/userActivityNew:
    post:
      summary: активности пользователя 15.1
      description: |-
        отображает список всех активностей пользователя за период (посещение, тренировки, услуги СПА)

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: userActivityNew
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - endDate
              - startDate
            properties:
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T13:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-15T00:00:00'
          x-examples: { }
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  description: дата начала
                endDate:
                  type: string
                  format: date
                  description: дата окончания
                gym:
                  type: object
                  description: клуб
                  required:
                    - uid
                    - name
                  properties:
                    uid:
                      type: string
                      description: идентификатор клуба
                    name:
                      type: string
                      description: наименование клуба
                    type:
                      type: string
                      enum:
                        - outdoor
                        - gym
                        - online
                        - studio
                      description: тип клуба
                room:
                  type: object
                  description: помещение
                  properties:
                    uid:
                      type: string
                      description: идентификатор помещения
                    name:
                      type: string
                      description: наименование
                  required:
                    - uid
                    - name
                serviceList:
                  type: array
                  description: список услуг
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор описания услуги
                      name:
                        description: наименование описания услуги
                        type: string
                      debt:
                        type: boolean
                        description: долг
                      quantity:
                        type: integer
                        description: Количество услуг
                      photo:
                        type: string
                        description: Фото услуги
                      price:
                        type: number
                        description: цена услуги
                      paymentStatus:
                        type: string
                        enum:
                          - inProgress
                          - debt
                          - paid
                        description: статус оплаты
                      objectiveList:
                        type: array
                        description: цели клиента
                        items:
                          type: object
                          properties:
                            uid:
                              type: string
                              description: идентификатор цели
                            name:
                              type: string
                              description: наименование цели
                            color:
                              type: string
                              description: код цвета

                    required:
                      - uid
                      - name
                      - debt
                      - quantity
                employee:
                  type: object
                  description: сотрудник
                  properties:
                    uid:
                      type: string
                      description: уникальный идентификатор
                    firstName:
                      type: string
                      description: имя
                    lastName:
                      type: string
                      description: фамилия
                    photo:
                      type: string
                      description: фото сотрудника
                  required:
                    - uid
                    - firstName
                    - lastName
                docId:
                  type: string
                  description: Идентификатор документа (для расшифровки)
                docType:
                  type: string
                  description: Тип документа (для расшифровки)
                  enum:
                    - personal
                    - group
                    - visit
                    - guestVisit
                canCancel:
                  type: boolean
                  description: Признак возможной отмены
                canRegistrate:
                  type: boolean
                  description: Признак возможной повторной записи
                paymentStatus:
                  type: string
                  enum:
                    - inProgress
                    - debt
                    - paid
                servicePhoto:
                  type: string
                  description: Фото услуги, если в документе более 1 услуги, будет выводиться одна из
              required:
                - startDate
                - endDate
                - gym
                - serviceList
                - docId
                - docType
                - canCancel
                - paymentStatus
          examples:
            application/json: список активностей
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Schedules
      operationId: userActivityNew
    x-restlet:
      section: Schedules
    parameters: [ ]
  /lists/gymList:
    post:
      summary: список клубов - 5.5; 20.1 (CONNECT)
      description: |-
        Возвращает список клубов заданной сети

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: gymList
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - name: auth-key
          in: header
          required: true
          type: string
          description: ключи авторизации (токен)
          x-example: 4f1225f6-cb40-11e9-bba8-005056b11c47
          default:   4f1225f6-cb40-11e9-bba8-005056b11c47
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              chain:
                type: integer
                description: идентификатор сети
                example: 1
              type:
                type: string
                enum:
                  - gym
                  - online
                  - studio
                  - outdoor
                description: тип клуба
          x-examples: {}
          description: 'request example  '
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор клуба
                  minLength: 36
                  maxLength: 36
                name:
                  type: string
                  description: наименование клуба
                type:
                  type: string
                  description: тип клуба
                address:
                  type: string
                  description: адрес клуба
                segment:
                  type: object
                  description: сегмент клуба
                  required:
                    - name
                    - color
                  properties:
                    name:
                      type: string
                    color:
                      type: string
                coords:
                  type: object
                  description: координаты
                  required:
                    - latitude
                    - longitude
                  properties:
                    latitude:
                      type: number
                      description: широта
                    longitude:
                      type: number
                      description: долгота
                metro:
                  type: array
                  description: метро
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование
                      lineColor:
                        type: string
                        description: телефон
                      lineName:
                        type: string
                        description: время работы в будни
                      lineNumber:
                        type: string
                        description: время  работы в выходные и праздники
                    required:
                      - name
                      - lineColor
                      - lineName
                      - lineNumber
                phone:
                  type: string
                  description: основной телефон клуба
                hasAccess:
                  type: boolean
                  description: 'есть доступ, для не авторизованного клиента null'
                base:
                  type: boolean
                  description: 'основной клуб доступа'
                order:
                  type: integer
                  description: 'порядок вывода клуба'
                photo:
                  type: string
                  description: основное фото клуба
                state:
                  type: string
                  description: 'состояние: "Предпродажи", "Ремонт" и т.д.'
                weekdaysTime:
                  type: string
                  description: время работы в будни
                holidaysTime:
                  type: string
                  description: время работы в выходные
              required:
                - uid
                - name
                - type
                - address
                - segment
                - coords
                - metro
                - phone
                - photo
                - order
          examples: {}
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: gymList
    x-restlet:
      section: Lists
    parameters: []
  /lists/roomList:
    post:
      summary: cписок помещений
      description: |-
        Возвращает список помещений клуба

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: roomList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: 'идентификатор клуба, временно потом уберем'
                example: cc35e9b2-d155-11e4-80d1-005056810138
              type:
                type: string
                description: тип помещения
                enum:
                  - lockerRoom
                  - saferoom
                example: lockerRoom
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
            required:
              - gymId
              - type
              - uid
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - name
                - uid
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор помещения
                  minLength: 36
                  maxLength: 36
                name:
                  type: string
                  description: наименование помещения
                type:
                  type: string
                  description: тип помещения
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: roomList
    x-restlet:
      section: Lists
    parameters: []
  /lists/objectiveList:
    post:
      summary: справочник целей
      description: |-
        Возвращает список целей

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: objectiveList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: 'идентификатор цели'
                name:
                  type: string
                  description: наименование
                description:
                  type: string
                  description: описание цели
                shortDescription:
                  type: string
                  description: краткое описание
                order:
                  type: number
                  description: порядок для сортировки
                photo:
                  type: string
                  description: главное фото
                color:
                  type: string
                  description: цвет
                photoes:
                  type: array
                  items:
                    type: object
                    properties:
                      URL:
                        type: string
                        description: ссылка на фото
                videos:
                  type: array
                  items:
                    type: object
                    properties:
                      URL:
                        type: string
                        description: ссылка на видео

        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: objectiveList
    x-restlet:
      section: Lists
    parameters: [ ]
  /customers/clientObjectives:
    post:
      summary: цели клиента
      description: |-
        Возвращает массив целей клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: clientObjectives
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              userId:
                type: string
                description: идентификатор клиента(для приложения тренера и вэб)
      x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: 'идентификатор цели'
                name:
                  type: string
                  description: наименование
                description:
                  type: string
                  description: полное описание цели
                shortdescription:
                  type: string
                  description: краткое описание цели
                order:
                  type: number
                  description: порядок для сортировки
                photo:
                  type: string
                  description: ссылка на главное фото цели
                photoes:
                  type: array
                  items:
                    type: object
                    properties:
                      URL:
                        type: string
                        description: ссылка на фото
                videos:
                  type: array
                  items:
                    type: object
                    properties:
                      URL:
                        type: string
                        description: ссылка на видео
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: clientObjectives
    x-restlet:
      section: Lists
    parameters: [ ]
  /customers/setClientObjectives:
    post:
      summary: установить цели клиента
      description: |-
        устанавливает для клиента цели

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: setClientObjectives
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: 'идентификатор цели'
                name:
                  type: string
                  description: наименование
                actual:
                  type: number
                  description: актуальность
            required:
              - uid
              - actual

      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат запроса
                enum:
                  - ok
                  - fail


        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: setClientObjectives
    x-restlet:
      section: Lists
    parameters: [ ]
  /lists/cancelcausesList:
    post:
      summary: список причин отмены записи (CONNECT)
      description: |-
        Возвращает массив причин отмен записи на персональные услуги

        Ответственный 
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: Request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: cancelcausesList
        - $ref: '#/parameters/language'
        - name: Brand
          in: header
          required: true
          type: string
          description: бренд
          default: None
          enum:
            - WorldClass
            - Fizkult
            - UFC
            - None
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - name
                - uid
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор причины отмены
                  minLength: 36
                  maxLength: 36
                name:
                  type: string
                  description: наименование причины отмены
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: cancelcausesList
    x-restlet:
      section: Lists
    parameters: []
  /lists/chainList:
    post:
      summary: список сетей - 1.1 (CONNECT)
      description: |-
        Возвращает массив сетей подключенных к личному кабинету

        Ответственный 
      parameters:
        - name: content-type
          in: header
          required: true
          type: string
          default: application/json
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: chainList
        - $ref: '#/parameters/language'
        - name: brand
          in: header
          required: true
          type: string
          description: бренд
          default: None
          enum:
            - WorldClass
            - Fizkult
            - UFC
            - None
      responses:
        '200':
          description: Status 200
          schema:
            type: array
            items:
              type: object
              properties:
                brand:
                  type: string
                  description: бренд
                code:
                  type: number
                  description: код сети
                holdingCode:
                  type: number
                  description: код холдинга
                name:
                  type: string
                  description: наименование сети
                loyaltyProgram:
                  type: string
                  description: бонусная система
                  enum:
                    - Rating
                    - Bonus
                    - RatingBonus
                    - None
                currencySymbol:
                  type: string
                  description: символ национальной валюты
                countryCode:
                  $ref: '#/definitions/countryCode'
                phone:
                  type: string
                  description: номер телефона поддержки
                email:
                  type: string
                  description: почта техподдержки
                timeZone:
                  description: временная зона
                  type: string
                availableSections:
                  type: array
                  description: доступные разделы
                  items:
                    type: string
                    enum:
                      - packageInfo
                      - membershipInfo
                      - bonus
                      - rentedLockerList
                      - paymentPackage
                      - bannerList
                      - nearestService
                      - support
                      - balance
                      - familyAccount
                      - financialHistory
                rules:
                  type: string
                  description: ссылка на правил
                pdn:
                  type: string
                  description: ссылка на пдн
              required:
                - brand
                - code
                - holdingCode
                - name
                - loyaltyProgram
                - currencySymbol
                - countryCode
                - availableSections
                - rules
                - pdn
      tags:
        - Lists
      operationId: chainList
  /lists/countryCodeList:
    post:
      summary: список кодов стран - 1.2 (CONNECT)
      description: |-
        Список кодов номеров телефонов по странам с маской номеров телефонов

        Ответственный 
      parameters:
        - name: content-type
          in: header
          required: true
          type: string
          default: application/json
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: countryCodeList
        - $ref: '#/parameters/language'
        - name: brand
          in: header
          required: true
          type: string
          description: бренд
          default: None
          enum:
            - WorldClass
            - Fizkult
            - UFC
            - None
      responses:
        '200':
          description: Status 200
          schema:
            type: array
            items:
              $ref: '#/definitions/countryCode'
      tags:
        - Lists
      operationId: countryCodeList
    x-restlet:
      section: Lists
    parameters: []
  /lists/packagePriceList:
    post:
      summary: прайс лист пакетов услуг - 9.2
      description: |-
        Возвращает список описаний пакетов услуг с минимальной ценой

        Точки входа в метод:
        1. Список пакетов услуг по клубу
        2. Из описания услуги
        3. Из описания тренера

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: packagePriceList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              employeeTypeList:
                type: array
                default: []
                description: список категорий сотрудника
                items:
                  type: string
              serviceList:
                type: array
                default: []
                description: список услуг
                items:
                  type: string
            required:
              - gymId
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор описания пакета услуг
                name:
                  type: string
                  description: наименование описания
                shortDescription:
                  type: string
                  description: краткое описание пакета услуг
                photo:
                  type: string
                  description: URL фотогорафии
                price:
                  type: number
                  description: цена
                packageList:
                  type: array
                  description: 'список пакетов услуг, входящих в данное описание пакета услуг'
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор пакета услуг
                      price:
                        type: number
                        description: цена пакета услуг
                      package:
                        type: boolean
                        description: признак пакета, блок услуг ДСУ(дополнительные спортивные услуги) и СПА вне основного абонемента. Предоставляется скидка за счет количества услуг. Параметры при покупки клип-карты, которые выбирает клиент - 1)Категория специалиста; 2) Количество услуг; 3) Длительность услуги; Комбинация из этих трех параметров определяет стоимость клип-карты, но ориентирована на нового клиента и имеет цель , к примеру подкачаться.
                      entryList:
                        type: array
                        description: услуги
                        items:
                          type: object
                          properties:
                            uid:
                              type: string
                              description: идентификатор услуги
                            name:
                              type: string
                              description: наименование услуги
                            serviceTypeBusinessDirection:
                              type: string
                              description: бизнес направление услуги (Дополнительные параметры - Вид деятельности - Бизнес направление)
                            employeeKind:
                              type: string
                              description: Тип сотрудника
                            serviceKind:
                              type: string
                              description: Направление (Дополнительные параметры - Вид деятельности - Направление)
                            serviceKindPhoto3:
                              type: string
                              description: Ссылка на фото Направления
                            'tags':
                              type: string
                              description: Ссылка на фото Направления
                    required:
                      - uid
                      - price
              required:
                - uid
                - name
                - shortDescription
                - photo
                - price
                - packageList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: packagePriceList
    x-restlet:
      section: Lists
    parameters: []
  /lists/packageConstructor:
    post:
      summary: конструктор пакетов услуг - 9.3
      description: |-
        Возвращает список пакетов услуг по конкретному описанию

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: packageConstructor
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              uid:
                type: string
                description: идентификатор описания пакета услуг
                example: cc35e9b2-d155-11e4-80d1-005056810138
              packageList:
                type: array
                description: 'список пакетов услуг, входящих в данное описание пакета услуг'
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор пакета услуг
                    price:
                      type: number
                      description: цена пакета услуг
                  required:
                    - uid
                    - price
            required:
              - gymId
              - uid
              - packageList
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              photoList:
                type: array
                description: список URL фотографий описания пакетов услуг
                items:
                  type: string
              hasContract:
                type: boolean
                description: есть действующая карта
              packageList:
                type: array
                description: список пакетов услуг
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор пакета услуг
                    amount:
                      type: number
                      description: цена
                    amountDiscount:
                      type: number
                      description: цена со скидкой
                    quantity:
                      type: number
                      description: количество услуг в пакете
                    serviceList:
                      description: список услуг пакета
                      type: array
                      items:
                        $ref: '#/definitions/service'
                  required:
                    - uid
                    - amount
                    - amountDiscount
                    - quantity
                    - serviceList
            required:
              - photoList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: packageConstructor
    x-restlet:
      section: Lists
    parameters: []
  /lists/employeeList:
    post:
      summary: список сотрудников - 21.1 (CONNECT)
      description: |-
        Возвращает список сотрудников

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: employeeList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
            required:
              - uid
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор сотрудника
                firstName:
                  type: string
                  description: Имя
                lastName:
                  type: string
                  description: Фамилия
                photo:
                  type: string
                  description: URL фотографии
                isMyCoach:
                  type: boolean
                  description: это мой персональный тренер
                cashlessTips:
                  type: boolean
                  description: подключен к системе безналичных чаевых
                categoryList:
                  type: array
                  description: категории сотрудников
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование категории сотрудника
                      serviceKind:
                        type: string
                        description: наименование направления
                      serviceType:
                        type: string
                        description: тип направления
                        enum:
                          - spa
                          - fitness
                    required:
                      - name
                      - serviceKind
                      - serviceType
                objectiveList:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор цели
                      name:
                        type: string
                        description: наименование цели
                      color:
                        type: string
                        description: цвет
                gender:
                  type: string
                  enum:
                    - male
                    - female
                  description: пол сотрудника
              required:
                - uid
                - firstName
                - lastName
                - photo
                - isMyCoach
                - categoryList
                - gender
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: employeeList
    x-restlet:
      section: Lists
    parameters: []
  /lists/membershipPriceList:
    post:
      summary: прайс лист абонементов - 8.5
      description: |-
        Возвращает прайс лист абонементов

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipPriceList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              customerType:
                type: string
                description: тип потенциального клиента
                enum:
                  - self
                  - other
                  - guest
                example: self
              customer:
                type: string
                description: 'идентификатор клиента, для кого осуществляется покупка'
            required:
              - gymId
              - customerType
          x-examples:
            example: '{"gymId": "cc35e9b2-d155-11e4-80d1-005056810138", "customerType": "self"}'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор номенклатуры
                uidDescription:
                  type: string
                  description: идентификатор описания абонемента
                name:
                  type: string
                  description: наименование описания абонемента
                shortDescription:
                  type: string
                  description: короткое описание абонемента
                photo:
                  type: string
                  description: URL фотографии
                tagList:
                  type: array
                  description: теги
                  items:
                    type: object
                    properties:
                      tag:
                        type: string
                        description: тег
                      weight:
                        type: number
                        description: вес (приоритет)
                    required:
                      - tag
                      - weight
                paymentType:
                  type: string
                  description: тип оплаты
                  enum:
                    - prepayment
                    - installment
                    - subscribe
                    - postpay
                serviceQuantity:
                  type: number
                  description: количество услуг в пакете
                freezing:
                  type: number
                  description: количество дней заморозки
                price:
                  type: integer
                  description: цена (минимальная цена)
                duration:
                  type: number
                  description: длительность абонемента
                amount:
                  type: number
                  description: Сумма со скидкой
                description:
                  type: string
                  description: 'описание '
              required:
                - uid
                - uidDescription
                - name
                - shortDescription
                - photo
                - tagList
                - paymentType
                - serviceQuantity
                - freezing
                - price
                - duration
                - amount
                - description
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: membershipPriceList
    x-restlet:
      section: Lists
    parameters: []
  /cachvalue/balance:
    post:
      summary: Баланс депозита клиента
      description: |-
        Метод возвращает остаток депозита клиента

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: updateBalance
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            description: Остсток депозита
            properties:
              amount:
                type: string
                description: Остаток депозита
              reserve:
                type: string
                description: зарезервировано
            required:
              - amount
              - reserve
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
            required:
              - result
              - description
      tags:
        - Customers
      operationId: membershipFreezing
    x-restlet:
      section: CacheValuesTypes
    parameters: []
  /customers/packageList:
    post:
      summary: Список пакетов услуг клиентов
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: Идентификатор пакета услуг
                code:
                  type: string
                  description: Код пакета услуг
                name:
                  type: string
                  description: Наименование пакета услуг
                shortDescription:
                  type: string
                  description: краткое описание
                photo:
                  type: string
                  description: фото
                endDate:
                  type: string
                  format: date
                  description: дата окончания
                serviceQuantity:
                  type: number
                  description: Остаток услуг
                gymList:
                  type: array
                  description: Клубы пакета
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор клуба
                      name:
                        type: string
                        description: имя клуба
                      main:
                        type: boolean
                        description: флаг показывающий является ли данный клуб основным по  пакету
                    required:
                      - uid
                      - name
                      - main
                serviceList:
                  type: array
                  description: список услуг
                  items:
                    $ref: '#/definitions/service'
                status:
                  type: string
                  description: Статус контракта
                  enum:
                    - active - активный
                    - inactive - неактивный
                amount:
                  type: number
                  description: Сумма к оплате
                customerList:
                  type: array
                  description: Список клиентов
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: Идентификатор клиента
                      name:
                        type: string
                        description: ФИО клиента
                      main:
                        type: boolean
                        description: флаг определяет является ли клиент основным по абонементу
                    required:
                      - uid
                      - name
                      - main
                paymentStatus:
                  type: string
                  description: статус оплаты
                  enum:
                    - paid - 100%
                    - waiting
                    - inProgress
                    - confirming
                reserve:
                  type: array
                  items:
                    type: object
                    properties:
                      debt:
                        type: string
                        description: долг
                      quantity:
                        type: number
                        description: количество
                    required:
                      - debt
                      - quantity
                reserveQuantity:
                  type: number
                  description: количество зарезервированных услуг
              required:
                - uid
                - name
                - shortDescription
                - photo
                - endDate
                - serviceQuantity
                - gymList
                - serviceList
                - status
                - amount
                - customerList
                - paymentStatus
                - reserveQuantity
          examples:
            example-1: {}
        '403':
          description: Forbidden
          schema:
            type: object
            properties:
              result:
                type: string
              description:
                type: string
            required:
              - result
              - description
      description: |-
        Возвращает список пакетов услуг клиента

        Ответственный IT
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - type: string
          in: header
          name: request
          required: true
          description: Наименование запроса
          default: packageList
        - in: body
          name: body
          schema:
            type: object
            properties:
              uidList:
                type: array
                description: 'список идентификаторов пакетов (если заполнен, то информация только пакетов из списка)'
                items:
                  type: string
      tags:
        - Customers
      operationId: packageList
    parameters: []
  /info/gymInfo:
    x-restlet:
      section: Lists
    post:
      summary: информация по клубу - 20.2 (CONNECT)
      description: |-
        Возвращает информацию по клубу

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: gymInfo
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                example: cc35e9bd-d155-11e4-80d1-005056810138
                description: идентификатор клуба
            required:
              - uid
          description: 'request example  '
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              state:
                type: string
                description: 'состояние: "Предпродажи", "Ремонт" и т.д.'
              additional:
                type: array
                description: дополнительное описание
                items:
                  type: object
                  properties:
                    typeDescription:
                      type: array
                      description: Описание типа направления
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: наименование
                          description:
                            type: string
                            description: доп. описание
                        required:
                          - name
                          - description
                    typeName:
                      type: string
                      description: Имя типа направления
                  required:
                    - typeDescription
                    - typeName
              metro:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    lineColor:
                      type: string
                    lineName:
                      type: string
                    lineNumber:
                      type: string
                  required:
                    - name
                    - lineColor
                    - lineName
                    - lineNumber
              photos:
                type: array
                description: список URL фотографий
                items:
                  type: string
              departments:
                type: array
                description: департаменты
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: наименование
                    phone:
                      type: string
                      description: телефон
                    weekdaysTime:
                      type: string
                      description: время работы в будни
                    holidaysTime:
                      type: string
                      description: время  работы в выходные и праздники
                  required:
                    - name
                    - phone
                    - weekdaysTime
                    - holidaysTime
              coords:
                type: object
                description: координаты
                required:
                  - latitude
                  - longitude
                properties:
                  latitude:
                    type: number
                    description: широта
                  longitude:
                    type: number
                    description: долгота
              segment:
                type: object
                description: наименование  сегмента клуба
                required:
                  - name
                  - color
                properties:
                  name:
                    type: string
                  color:
                    type: string
              address:
                type: string
                description: адрес клуба
              type:
                type: string
                description: тип клуба
              name:
                type: string
                description: наименование клуба
              uid:
                type: string
                description: идентификатор клуба
                minLength: 36
                maxLength: 36
              weekdaysTime:
                type: string
                description: время работы в будни
              holidaysTime:
                type: string
                description: время  работы в выходные и праздники
            required:
              - additional
              - metro
              - photos
              - departments
              - coords
              - segment
              - address
              - type
              - name
              - uid
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
      operationId: gymInfo
    parameters: []
  /lists/employeeListForPrebooking:
    x-restlet:
      section: Lists
    post:
      summary: список сотрудников  для предварительного бронирования- 21.1
      description: |-
        Возвращает список сотрудников

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: employeeListForPrebooking
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
              serviceId:
                type: string
                description: индентификатор услуги
              date:
                type: string
                format: date-time
                description: желаемая дата услуги
            required:
              - uid
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор сотрудника
                firstName:
                  type: string
                  description: Имя
                lastName:
                  type: string
                  description: Фамилия
                photo:
                  type: string
                  description: URL фотографии
                categoryList:
                  type: array
                  description: категории сотрудников
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование категории сотрудника
                      serviceKind:
                        type: string
                        description: наименование направления
                      serviceType:
                        type: string
                        description: тип направления
                        enum:
                          - spa
                          - fitness
                    required:
                      - name
                      - serviceKind
                      - serviceType
                objectiveList:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор цели
                      name:
                        type: string
                        description: наименование цели
                      color:
                        type: string
                        description: цвет
              required:
                - uid
                - firstName
                - lastName
                - photo
                - categoryList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: employeeListForPrebooking
    parameters: []
  /lists/employeeListForPrebookingNew:
    x-restlet:
      section: Lists
    post:
      summary: список сотрудников  для предварительного бронирования- 21.1
      description: |-
        Возвращает список сотрудников

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: employeeListForPrebookingNew
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
              serviceId:
                type: array
                description: индентификаторы услуг
                items:
                  type: string
              date:
                type: string
                description: желаемая дата услуги
            required:
              - uid
          x-examples: { }
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор сотрудника
                firstName:
                  type: string
                  description: Имя
                lastName:
                  type: string
                  description: Фамилия
                photo:
                  type: string
                  description: URL фотографии
                categoryList:
                  type: array
                  description: категории сотрудников
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: наименование категории сотрудника
                      serviceKind:
                        type: string
                        description: наименование направления
                      serviceType:
                        type: string
                        description: тип направления
                        enum:
                          - spa
                          - fitness
                    required:
                      - name
                      - serviceKind
                      - serviceType
                objectiveList:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор цели
                      name:
                        type: string
                        description: наименование цели
                      color:
                        type: string
                        description: цвет
              required:
                - uid
                - firstName
                - lastName
                - photo
                - categoryList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: employeeListForPrebookingNew
    parameters: [ ]
  /lists/serviceListForPrebooking:
    x-restlet:
      section: Lists
    post:
      summary: 'список услуг для предварительного бронирования- 23.4.1, 23.4.2'
      description: |-
        Возвращает список услуг

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: serviceListForPrebooking
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
              employeeId:
                type: string
                description: индентификатор сотрудника
              date:
                type: string
                description: желаемая дата услуги
              services:
                type: array
                description: Массив идентификаторов услуг
                items:
                  type: string
              uidDescription:
                type: string
                description: идентификатор описания услуги
            required:
              - uid
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                serviceKind:
                  type: string
                  description: наименование направления
                entryList:
                  type: array
                  description: наименование направления
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор услуги
                      duration:
                        type: integer
                        description: 'продолжительность, мин'
                      name:
                        type: string
                        description: наименование услуги
                      employeeKind:
                        type: string
                        description: категория сотрудника
                      price:
                        type: number
                        description: прайсовая цена
                    required:
                      - uid
                      - duration
                      - name
                      - employeeKind
                      - price
                serviceType:
                  type: string
                  description: Бизнес направление услуги (фиснес или СПА)
                  enum:
                    - spa
                    - fitness
                objectiveList:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор цели
                      name:
                        type: string
                        description: наименование цели
                      color:
                        type: string
                        description: цвет
              required:
                - serviceKind
                - entryList
                - serviceType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: serviceListForPrebooking
    parameters: []
  /lists/dateListForPrebooking:
    x-restlet:
      section: Lists
    post:
      summary: список дат для предварительного бронирования- 23.5
      description: |-
        Возвращает список дат и времени на которые можно записаться. Возвращаем всегда текущую неделю плюс следующую

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: dateListForPrebooking
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
              employeeId:
                type: string
                description: индентификатор сотрудника
              serviceId:
                type: string
                description: идентификатор услуги
            required:
              - uid
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            description: массив свободных дат и времени
            items:
              type: object
              properties:
                date:
                  type: string
                  description: дата
                hoursList:
                  type: array
                  description: список часов
                  items:
                    type: string
              required:
                - date
                - hoursList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: dateListForPrebooking
    parameters: []
  /lists/dateListForPrebookingVisit:
    x-restlet:
      section: Lists
    post:
      summary: список дат для предварительного бронирования посещения клуба
      description: |-
        Возвращает список дат и времени на которые можно записаться для посещения клуба.

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: dateListForPrebookingVisit
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор клуба
                example: cc35e9c2-d155-11e4-80d1-005056810138
            required:
              - uid
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            description: массив свободных дат и времени
            items:
              type: object
              properties:
                date:
                  type: string
                  description: дата
                timeRangeList:
                  type: array
                  description: список интервалов времени
                  items:
                    type: object
                    properties:
                      duration:
                        type: number
                        description: Длительность интервала в часах
                      hoursList:
                        type: array
                        description: список часов
                        items:
                          type: string
                    required:
                      - duration
                      - hoursList
              required:
                - date
                - timeRangeList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: dateListForPrebookingVisit
    parameters: []
  /user/userRating:
    x-restlet:
      section: Lists
    post:
      summary: 4.1 - 4.2
      description: |-
        Возвращает текущий рейтинг клиента и описания программы лояльности

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: userRating
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            description: массив свободных дат и времени
            items:
              type: object
              properties:
                priority:
                  type: integer
                  description: порядковый номер рейтинга
                uid:
                  type: string
                  description: идентификатор рейтинга
                name:
                  type: string
                  description: наименование рейтинга
                current:
                  type: boolean
                  description: текущий рейтинг
                levelPoints:
                  type: number
                  description: количество очков
                privileges:
                  type: array
                  description: список привелегий по рейтингу
                  items:
                    type: string
                conditions:
                  type: array
                  description: условия достижения
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: описание
                      isCompleted:
                        type: boolean
                        description: признак "Выполнено"
                      points:
                        type: number
                        description: количество очков
                    required:
                      - description
                      - isCompleted
                      - points
                color:
                  type: string
                  description: цвет
              required:
                - priority
                - uid
                - name
                - levelPoints
                - privileges
                - conditions
                - color
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: userRating
    parameters: []
  /user/loyaltyProgramRules:
    x-restlet:
      section: Lists
    post:
      summary: рейтинг клиента и описания программ лояльности  4.1 - 4.2
      description: |-
        Возвращает текущий рейтинг клиента и описания программы лояльности

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: loyaltyProgramRules
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            description: массив свободных дат и времени
            type: object
            properties:
              description:
                type: string
                description: правила
              attach:
                type: string
                description: прикрепленный файл
            required:
              - description
              - attach
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: loyaltyProgramRules
    parameters: []
  /customers/membershipFreezing:
    post:
      summary: заморозка абонемента - 8.19.1; 8.19.2
      description: |-
        Метод выполняет заморозку/продление заморозки абонемента

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipFreezing
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Идентификатор абонемента
              startDate:
                type: string
                description: Дата начала заморозки
                format: date
              endDate:
                type: string
                description: Дата окончания заморозки
                format: date
              type:
                type: string
                default: freezing
                enum:
                  - freezing
                  - unfreezing
                  - extendfreezing
                example: freezing
                description: вид операции
            required:
              - uid
              - startDate
              - endDate
              - type
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              freezing:
                type: number
                description: Остаток дней заморозки
              startDate:
                type: string
                description: Датаначала заморозки
                format: date
              endDate:
                type: string
                format: date
                description: Дата окончания заморозки
            required:
              - freezing
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - result
              - description
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
        - Membership
      operationId: membershipFreezing
    x-restlet:
      section: Customers
    parameters: []

  /customers/membershipFreezeList:
    post:
      summary: прайс лист заморозок  - 8.19.3
      description: |-
        Метод возвращает список доступных для приобретения заморозок

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipFreezeList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор абонемента
                example: 4f1225f6-cb40-11e9-bba8-005056b11c47
            required:
              - uid
          x-examples: {}
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор абонемента
                example: 4f1225f6-cb40-11e9-bba8-005056b11c47
            required:
              - uid
          x-examples:
            example-1: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор номенклатуры
                name:
                  type: string
                  description: Наименование
                amountDiscount:
                  type: number
                  description: Цена со скидкой
                amount:
                  type: number
                  description: цена
              required:
                - uid
                - name
                - amount
                - amountDiscount
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - description
              - result
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
        - Membership
      operationId: membershipFreezeList
    x-restlet:
      section: Customers
    parameters: []

  /catalog/addProducts:
    post:
      summary: загрузка товарных позиций из системы УТ 11
      description: |-
        Используется для загрузки данных по номенклатуре товара в кпо для дальшейшей продажи клиентам
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
              description:
                type: string
                default: Ok
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
        x-examples: { }
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipFreezeList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: array
            default: [ ]
            description: список номенклатуры
            items:
              properties:
                uid:
                  type: string
                  description: идентификатор номенклатуры
                  example: cc35e9b2-d155-11e4-80d1-005056810138
                groupUid:
                  type: string
                  description: идентификатор группы номенклатуры
                  example: cc35e9b2-d155-11e4-80d1-005056810138
                isGroup:
                    type: boolean
                    description: признак группы текущего элемента
                    example: true
                isDelete:
                    type: boolean
                    description: признак группы текущего элемента
                    example: true
                name:
                      type: string
                      description: наименование элемента
                      example: Крем для лица
                vatRate:
                  type: string
                  description: ставка НДС
                  example: НДС20
                  enum:
                    - НДС20
                    - БезНДС
                    - НДС0
                    - НДС12
                    - НДС18
                    - НДС18_118
                    - НДС10_110
                productType:
                  type: string
                  description: тип номенклатуры
                  example: Товар
                  enum:
                    - Товар
                    - Инвентарь
                    - Оборудование
                barcode:
                  type: string
                  description: штрихкод
                  example: 1234567890
                articleNumber:
                  type: string
                  description: артикул
                  example: 1234567890
                isMarking:
                  type: boolean
                  description: признак маркируемого товара
                  example: true
                series:
                  type: array
                  description: массив серий номенклатуры
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор серии
                      name:
                        type: string
                        description: наименование серии


              required:
                - uid
                - groupUid
                - isGroup
                - name
                - vatRate
                - productType
    x-restlet:
      section: events
    parameters: [ ]

  /events/scheduleRegistration:
    post:
      summary: регистрация на групповое занятие - 18.1
      description: |-
        Выполняет регистрацию клиента на групповое занятие

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: scheduleRegistration
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              docId:
                type: string
                description: идентификатор документа
              type:
                type: string
                default: reserve
                description: тип запроса
                example: cancel
            required:
              - docId
              - type
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  type: object
                  description: данные для метода /payment/customerOrder
                  properties:
                    docId:
                      type: string
                      description: идентификатор документа
                    docType:
                      type: string
                      description: тип документа
                      enum:
                        - group
                    customer:
                      type: string
                      description: идентификатор клиента
                  required:
                    - docId
                    - docType
                    - customer
              pageType:
                type: string
                enum:
                  - activity
                  - payment
                description: тип страницы перехода
            required:
              - pageType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: ScheduleRegistration
      tags:
        - Events
    x-restlet:
      section: events
    parameters: []
  /payment/paymentPreparation:
    post:
      summary: 'подготовка оплаты 13.1, 13.2'
      description: |-
        Возвращает список доступных вариантов оплат. Если какой либо вариант не возвращен, значит он не доступен при оплате.

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: paymentPreparation
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: ''
            properties:
              paymentObject:
                type: array
                description: Объекты для выставления счета
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Идентификатор абонемента или чека
                    uidType:
                      type: string
                      default: package
                      description: Тип идентификатора
                      enum:
                        - package - абонемент
                        - invoice - чек
                  required:
                    - uid
                    - uidType
              account:
                type: object
                description: пополнение лицевого счета
                properties:
                  gymId:
                    type: string
                    description: идентификатор клуба
                  amount:
                    type: number
                    description: сумма взноса на лицевой счет
                required:
                  - gymId
                  - amount
              customerId:
                type: string
                description: 'идентификатор клиента, использовать только при оплате с сайта, без ЛК'
              amount:
                type: number
                description: 'сумма оплаты, если не задана, то остаток к оплате по'
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор заказа
              paymentOptions:
                type: array
                description: доступные способы оплаты
                items:
                  type: object
                  properties:
                    owner:
                      type: object
                      description: Владелец
                      required:
                        - uid
                        - firstName
                        - lastName
                      properties:
                        uid:
                          type: string
                          description: идентификатор владельца
                        firstName:
                          type: string
                          description: Имя
                        lastName:
                          type: string
                          description: Фамилия
                    cards:
                      type: array
                      description: доступные клиенту банковские карты
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: тип платежной системы
                            enum:
                              - applePay
                              - googlePay
                              - bankCard
                              - qr
                              - mir
                              - americanExpress
                              - jcb
                              - international
                              - dinersClub
                              - visa
                              - masterCard
                              - maestro
                              - chinaUnionPay
                              - discover
                              - universalElectronicCard
                              - none
                          name:
                            type: string
                            description: наименование
                          uid:
                            type: string
                            description: идентификатор карты
                          amount:
                            type: number
                            description: возможная сумма оплаты
                          order:
                            type: number
                            description: поле сортировки
                          default:
                            type: boolean
                            description: тип оплаты по умолчанию
                        required:
                          - type
                          - name
                          - uid
                          - amount
                          - order
                          - default
                    deposits:
                      type: array
                      description: доступные клиенту авансы
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - account
                              - bonus
                            description: тип депозита
                          balance:
                            type: number
                            description: текущий остаток депозита
                          max:
                            type: number
                            description: 'максимальная сумма оплаты, более этого значения клиент заплатить не может'
                          min:
                            type: number
                            description: 'минимальная сумма платежа, меньше этого значения клиент заплатить не может'
                        required:
                          - type
                          - balance
                          - max
                          - min
                    personal:
                      type: boolean
                      description: если истина то это ресурсы клиента
                  required:
                    - owner
                    - personal
              paymentAmount:
                type: number
                description: сумма к оплате
              amountRange:
                type: object
                description: интервал возможной оплаты
                properties:
                  min:
                    type: number
                    description: минимальная сумма оплаты
                  max:
                    type: number
                    description: максимальная сумма
                required:
                  - min
                  - max
            required:
              - uid
              - paymentOptions
              - paymentAmount
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: paymentPreparation
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
    put:
      summary: 'подготовка оплаты 13.1, 13.2'
      operationId: KPO-paymentPreparation
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              paymentOptions:
                type: array
                description: доступные способы оплаты
                items:
                  type: object
                  properties:
                    owner:
                      type: object
                      description: Владелец
                      required:
                        - uid
                        - firstName
                        - lastName
                      properties:
                        uid:
                          type: string
                          description: идентификатор владельца
                        firstName:
                          type: string
                          description: Имя
                        lastName:
                          type: string
                          description: Фамилия
                    cards:
                      type: array
                      description: доступные клиенту банковские карты
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: тип платежной системы
                            enum:
                              - mir
                              - americanExpress
                              - jcb
                              - international
                              - dinersClub
                              - visa
                              - masterCard
                              - maestro
                              - chinaUnionPay
                              - discover
                              - universalElectronicCard
                              - none
                          name:
                            type: string
                            description: наименование
                          uid:
                            type: string
                            description: идентификатор карты
                          amount:
                            type: number
                            description: возможная сумма оплаты
                        required:
                          - type
                          - name
                          - uid
                          - amount
                    deposits:
                      type: array
                      description: доступные клиенту авансы
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - account
                              - bonus
                            description: тип депозита
                          balance:
                            type: number
                            description: текущий остаток депозита
                          max:
                            type: number
                            description: 'максимальная сумма оплаты, более этого значения клиент заплатить не может'
                          min:
                            type: number
                            description: 'минимальная сумма платежа, меньше этого значения клиент заплатить не может'
                        required:
                          - type
                          - balance
                          - max
                          - min
                    personal:
                      type: boolean
                      description: если истина то это ресурсы клиента
                  required:
                    - owner
                    - personal
              paymentAmount:
                type: number
                description: сумма к оплате
              docList:
                type: array
                description: список идентификаторов документов заявка на оплату
                items:
                  type: object
                  properties:
                    docId:
                      type: string
                      description: ' идентификатор документа'
                    amount:
                      type: number
                      description: сумма документа
                  required:
                    - docId
                    - amount
              amountRange:
                type: object
                description: Диапозон возможной суммы оплаты
                properties:
                  min:
                    type: number
                    description: минимальная сумма оплаты
                  max:
                    type: number
                    description: максимальная сумма оплаты
                required:
                  - min
                  - max
              gymId:
                type: string
                description: идентификатор клуба
            required:
              - paymentOptions
              - paymentAmount
              - docList
              - gymId
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      description: |-
        Возвращает список доступных вариантов оплат. Если какой либо вариант не возвращен, значит он не доступен при оплате.

        Ответственный IT
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: ''
            properties:
              paymentObject:
                type: array
                description: Объекты для выставления счета
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: Идентификатор абонемента или чека
                    uidType:
                      type: string
                      default: package
                      description: Тип идентификатора
                      enum:
                        - package - абонемент
                        - invoice - чек
                  required:
                    - uid
                    - uidType
              account:
                type: object
                description: пополнение лицевого счета
                properties:
                  gymId:
                    type: string
                    description: идентификатор клуба
                  amount:
                    type: number
                    description: сумма взноса на лицевой счет
                required:
                  - gymId
                  - amount
              customerId:
                type: string
                description: 'идентификатор клиента, использовать только при оплате с сайта, без ЛК'
              amount:
                type: number
                description: Сумма оплаты
          description: ''
      tags:
        - KPO
  /payment/bindCard:
    post:
      summary: привязать карту 5.2
      description: |-
        Запрос на привязку банковской карты клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: bindCard
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            required:
              - orderId
              - formUrl
              - returnUrl
              - failUrl
            properties:
              orderId:
                type: string
                description: идентификатор банковской транзакции
              formUrl:
                type: string
                description: url перехода на страницу оплаты от банка
              returnUrl:
                type: string
                description: url успешной оплаты
              failUrl:
                type: string
                description: url не успешной оплаты
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: bindCard
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
    put:
      summary: ''
      operationId: KPO-payment-bindCard
      tags:
        - KPO
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
          examples:
            example-1:
              result: ok
      description: |-
        Привязывает карту к клиенту

        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор банковской карты
              owner:
                type: string
                description: идентификатор клиента
              acquiringBank:
                type: string
                description: банк эквайер
              autopayment:
                type: boolean
                description: доступен автоплатеж
              expiryDate:
                type: string
                description: срок действия карты
              ownerName:
                type: string
                description: имя держателя карты
              paymentSystem:
                type: string
                description: платежная система
            required:
              - uid
              - owner
              - acquiringBank
              - autopayment
              - expiryDate
              - ownerName
              - paymentSystem
          x-examples:
            example-1:
              uid: aeca2a9c-184f-7ea8-bbf2-818e5e2618c5
              owner: f390eda3-604e-11e5-8130-005056811447
              acquiringBank: Sberbank
              description: '**** **** **** 5599'
              autopayment: false
              expiryDate: 12/24
              ownerName: CARDHOLDER NAME
              paymentSystem: ''
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор банковской карты
              owner:
                type: string
                description: идентификатор клиента
              acquiringBank:
                type: string
                description: банк эквайер
              autopayment:
                type: boolean
                description: доступен автоплатеж
              expiryDate:
                type: string
                description: срок действия карты
              ownerName:
                type: string
                description: имя держателя карты
              paymentSystem:
                type: string
                description: платежная система
            required:
              - uid
              - owner
              - acquiringBank
              - autopayment
              - expiryDate
              - ownerName
              - paymentSystem
          x-examples:
            example-1: {}
  /payment/paymentStatus:
    post:
      summary: статус оплаты
      description: |-
        Запрос на привязку банковской карты клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: paymentStatus
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор заказа
              paymentData:
                type: string
                description: данные при оплате ApplePay и GooglePay
            required:
              - uid
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - ok
                  - fail
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: paymentStatus
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
  /payment/paymentStatusNew:
    post:
      summary: статус оплаты ордера
      description: |-
        Инициирует связь с банком и возвращает статус оплаты по идентификатору ордера

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: paymentStatusNew
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор заказа
            required:
              - uid
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - ok
                  - fail
                  - inProgress
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: paymentStatusNew
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: [ ]
  /payment/unBindCard:
    post:
      summary: отвязать карту 5.2
      description: |-
        Запрос на отвязку банковской карты клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: unBindCard
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор банковской карты
            required:
              - uid
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - ok
            required:
              - result
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: unBindCard
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
    put:
      summary: ''
      operationId: KPO-payment-unBindCard
      tags:
        - KPO
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
            required:
              - result
          examples:
            example-1:
              result: ok
      description: |
        Отвязывает банковскую карту от клиента

        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор банковской карты
            required:
              - uid
          x-examples:
            example-1:
              uid: c939cffc-e659-7835-8fc2-4de25e2618c5
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор банковской карты
            required:
              - uid
          x-examples:
            example-1: {}
  /payment/bindCardList:
    post:
      summary: список привязаных карт 5.2
      description: |-
        Запрос на получение списка банковских карт клиента

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: bindCardList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: идентификатор клиента
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор карты
                name:
                  type: string
                  description: наименование
                paymentSystem:
                  type: string
                  description: тип платежной системы
                  enum:
                    - mir
                    - americanExpress
                    - jcb
                    - international
                    - dinersClub
                    - visa
                    - masterCard
                    - maestro
                    - chinaUnionPay
                    - discover
                    - universalElectronicCard
              required:
                - uid
                - name
                - paymentSystem
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: bindCardList
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
  /lists/gymListForAccess:
    post:
      summary: список клубов для со-доступа - 5.5
      description: |-
        Возвращает список клубов для со-доступа

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: gymListForAccess
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор абонемента
            required:
              - uid
          x-examples: {}
          description: 'request example  '
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор клуба
                  minLength: 36
                  maxLength: 36
                name:
                  type: string
                  description: наименование клуба
              required:
                - uid
                - name
          examples: {}
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: gymListForAccess
    x-restlet:
      section: Lists
    parameters: []
  /payment/customerOrder:
    post:
      summary: 'формирование документа продажи 5.1, 8.19.3, 8.20.2, 9.3 , 10.2'
      description: |-
        Возвращает документы для оплаты.

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: customerOrder
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: ''
            properties:
              packages:
                type: object
                description: Для подготовки оплаты клип-карт
                properties:
                  uid:
                    type: string
                    description: Идентификатор номенклатуры пакета
                  gymId:
                    type: string
                    description: идентификатор клуба
                  uidInstallment:
                    type: string
                    description: идентификатор схемы рассрочки
                  giftList:
                    type: array
                    description: Выбранные подарки
                    items:
                      type: object
                      properties:
                        uidGiftGroup:
                          type: string
                          description: Идентификатор группы подарков
                        giftGroupList:
                          type: array
                          items:
                            type: object
                            properties:
                              giftUid:
                                type: string
                                description: идентификатор подарка
                              quantity:
                                type: number
                                description: выбранное количество
                              gymList:
                                type: array
                                description: массив идентификаторов клубов
                                items:
                                  type: string
                            required:
                              - giftUid
                        uidDiscount:
                          type: string
                          description: идентификатор скидки
                      required:
                        - uidGiftGroup
                        - giftGroupList
                        - uidDiscount
                  customerId:
                    type: string
                    description: Идентификатор клиента
                required:
                  - uid
                  - gymId
              addPackage:
                type: object
                description: 'Для подготовки оплаты заморозки, со-доступов, доп. пакетов для детей, аренды полотенец'
                properties:
                  packageId:
                    type: string
                    description: идентификатор абонемента
                  serviceId:
                    type: string
                    description: идентификатор услуги
                  packageType:
                    type: string
                    description: идентификатор клиента
                    enum:
                      - freezing
                      - access
                      - customer
                      - towel
                  data:
                    type: string
                    description: 'Если packageType = freezing или towel, то пусто; если packageType = access, то идентификатор клуба; если packageType = customer, то идентификатор клиента'
                required:
                  - packageId
                  - serviceId
                  - packageType
              rentedLocker:
                type: object
                description: Для подготовки оплаты аренды шкафчиков
                properties:
                  gymId:
                    type: string
                    description: идентификатор клуба
                  serviceId:
                    type: string
                    description: идентификатор услуги
                  duration:
                    type: integer
                    description: длительность
                  lockerId:
                    type: string
                    description: идентификатор ячейки
                  startDate:
                    type: string
                    format: date
                    description: дата начала аренды
                required:
                  - gymId
                  - serviceId
                  - duration
                  - lockerId
                  - startDate
              services:
                type: array
                description: Для подготовки оплаты услуг/товаров
                items:
                  type: object
                  properties:
                    docId:
                      type: string
                      description: идентификатор документа
                    docType:
                      type: string
                      description: тип документа
                      enum:
                        - invoice - чек
                        - personal
                        - group
                    customer:
                      type: string
                      description: идентификатор клиента
                  required:
                    - docId
                    - docType
              customerId:
                type: string
                description: 'идентификатор клиента, использовать только при оплате с сайта, без ЛК'
              basket:
                type: object
                description: Корзина покупок
                properties:
                  gymId:
                    type: string
                    description: клуб
                  cartList:
                    type: array
                    description: список покупок
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          description: идентификатор услуги/товара
                        quantity:
                          description: Количество
                          type: number
                      required:
                        - productId
                        - quantity
                required:
                  - gymId
                  - cartList
          description: ''

      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор абонемента или чека
                uidType:
                  type: string
                  description: тип идентификатора
                  enum:
                    - package - абонемент
                    - invoice - чек
                amount:
                  type: number
                  description: сумма документа
                number:
                  type: string
                  description: номер абонемента
              required:
                - uid
                - uidType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - PaymentInProgress - заказ в обработке в банке
                  - IncorrectPackage - ошибка клип-карты
                  - IncorrectClub - неверный клуб/не найден клуб
                  - ContractNotFound - не найдена клубная карта
                  - IncorrectService - не найдена переданная услуга
                  - IncorrectCellСupboard - не корректное место хранения передано
                  - IncorrectPeriod - не корректный период аренды шкафа передан
                  - IncorrectParameter - не удалось сформировать документ продажи(прочие проблемы)
              description:
                type: string
                description: описание ошибки
      operationId: customerOrder
      tags:
        - Payment
    x-restlet:
      section: Lists
    parameters: []
  /payment/payment:
    post:
      summary: оплата
      description: |-
        Фиксирует оплату по авансам, списывает денеждные средства с привязанной карты, возвращает url для перехода на страницу оплаты

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: payment
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: ''
            properties:
              uid:
                type: string
                description: идентификатор заказа
              owner:
                type: string
                description: 'владелец карты/авансов, плательщик'
              card:
                type: string
                description: идентификатор карты
              deposits:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: тип аванса
                      enum:
                        - account
                        - bonus
                    paymentAmount:
                      type: number
                      description: сумма оплаты
            required:
              - uid
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              orderId:
                type: string
                description: идентификатор банковской транзакции
              formUrl:
                type: string
                description: url перехода на страницу оплаты от банка
              returnUrl:
                type: string
                description: url успешной оплаты
              failUrl:
                type: string
                description: url не успешной оплаты
              uid:
                type: string
                description: идентификатор заказа
            required:
              - uid
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: payment
      tags:
        - Payment
    x-restlet:
      section: Payment
    parameters: []
    put:
      summary: Оплата
      operationId: KPO-payment
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
        '403':
          description: Forbidden
          schema:
            type: object
            properties:
              result:
                type: string
      description: |-
        Фиксирует оплату по авансам, списывает денеждные средства с привязанной карты, возвращает url для перехода на страницу оплаты

        Ответственный IT
      parameters:
        - $ref: '#/parameters/content-type'
        - in: body
          name: body
          schema:
            type: object
            properties:
              docList:
                type: array
                description: 'список оплачеваемых документов '
                items:
                  type: string
              request:
                type: string
                enum:
                  - payment
                  - reserve
                  - cancel
                description: тип запроса
              paymentList:
                type: array
                description: способы оплаты
                items:
                  type: object
                  properties:
                    owner:
                      type: string
                    type:
                      type: string
                      description: тип способа оплаты
                      enum:
                        - account
                        - bonus
                        - card
                    amount:
                      type: number
                      description: сумма платежа
                    details:
                      type: object
                      description: доп. детали платежа
                  required:
                    - owner
                    - type
                    - amount
              uid:
                type: string
                description: идентификатор заказа в коннекте
            required:
              - docList
              - request
              - paymentList
              - uid
          description: ''
      tags:
        - KPO
  /lists/productList:
    post:
      summary: список услуг - 19.1 (CONNECT)
      description: |-
        Возвращает список услуг доступных в клубе

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: productList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              direction:
                type: string
                description: бизнес направление услуги
                enum:
                  - fitness
                  - spa
              entryType:
                type: array
                items:
                  type: object
                  properties:
                    entryType:
                      type: string
                      description: тип услуги
                      enum:
                        - course
                        - lesson
                        - personal
                        - group
                  required:
                    - entryType
            required:
              - gymId
              - direction
              - entryType
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: Идентификатор описания номенклатуры
                name:
                  type: string
                  description: наименование описания
                shortDescription:
                  type: string
                  description: краткое описание
                photo:
                  type: string
                  description: фото
                tagList:
                  type: array
                  description: теги
                  items:
                    $ref: '#/definitions/tag'
                entryList:
                  type: array
                  description: список идентификаторов услуг входящих в описание
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор услуги
                      entryType:
                        type: string
                        description: тип услуги
                        enum:
                          - personal
                          - group
                          - course
                          - lesson
                    required:
                      - uid
                      - entryType
                objectiveList:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор цели
                      name:
                        type: string
                        description: наименование цели
                      color:
                        type: string
                        description: цвет
                price:
                  type: number
                  description: 'цена, если отсутствует - не отображать, если =0 бесплатная'
              required:
                - uid
                - name
                - shortDescription
                - photo
                - tagList
                - entryList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: serviceList
  /info/productInfo:
    post:
      summary: описание услуги - 19.2 (CONNECT)
      description: |-
        Возвращает описание услуги

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: productInfo
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Идентификатор описания услуги
                example: cc35e9b2-d155-11e4-80d1-005056810138
              gym:
                type: string
                description: идентификатор клуба
              entryList:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор услуги
                    gym:
                      type: string
                      description: идентификатор клуба
                    entryType:
                      type: string
                      description: тип услуги
                      enum:
                        - personal
                        - group
                        - course
                        - lesson
                  required:
                    - uid

          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              photoList:
                type: array
                description: список URL фотографий
                items:
                  type: string
              shortDescription:
                type: string
                description: краткое описание
              fullDescription:
                type: string
                description: полное описание
              addDescription:
                type: string
                description: дополнительное описание
              name:
                type: string
                description: наименоване услуги
              objectiveList:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор цели
                    name:
                      type: string
                      description: наименование цели
                    color:
                      type: string
                      description: цвет
              tagList:
                type: array
                description: список тегов
                items:
                  $ref: '#/definitions/tag'
              uid:
                type: string
                description: идентификатор описания услуги
              entryList:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор услуги
                    entryType:
                      type: string
                      description: тип услуги
                      enum:
                        - personal
                        - group
                        - course
                        - lesson
                  required:
                    - uid
                    - entryType
              composition:
                type: array
                description: массив строк содержания
                items:
                  type: string
              attribute:
                type: array
                description: 'атрибуты, используется для курсов'
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    name:
                      type: string
                    order:
                      type: number
                  required:
                    - type
                    - name
                    - order
              content:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                    type:
                      type: string
                      enum:
                        - video
                        - file
                  required:
                    - uid
                    - name
                    - url
                    - type
              price:
                type: number
                description: 'если отсутствует - не показывать цену, если = 0 бесплатно'
              author:
                type: array
                items:
                  type: object
                  properties:
                    firstName:
                      type: string
                      description: фамилия
                    uid:
                      type: string
                      description: идентификатор сотрудника
                    lastName:
                      type: string
                      description: имя
                  required:
                    - firstName
                    - uid
                    - lastName
            required:
              - photoList
              - shortDescription
              - fullDescription
              - addDescription
              - name
              - tagList
              - uid
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
      operationId: serviceInfo
    x-restlet:
      section: Information
    parameters: []
  /events/personalRegistration:
    post:
      summary: регистрация на персональное занятие - 23.2.1
      description: |-
        Выполняет регистрацию персональной записи

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: personalRegistration
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
              serviceList:
                type: array
                description: массив идентификаторов услуг
                items:
                  type: string
              employeeId:
                type: string
                description: идентификатор сотрудника
              date:
                type: string
                description: дата начала персональной записи
            required:
              - gymId
              - serviceList
              - employeeId
              - date
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              pageType:
                type: string
                enum:
                  - payment
                  - activity
                description: тип следующей страницы
              services:
                type: array
                description: данные для метода /payment/customerOrder
                items:
                  type: object
                  properties:
                    docId:
                      type: string
                      description: идентификатор документа
                    docType:
                      type: string
                      description: тип документа
                      enum:
                        - prebooking
                    customer:
                      type: string
                      description: идентификатор клиента
                  required:
                    - docId
                    - docType
                    - customer
            required:
              - pageType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: personalScheduleRegistration
      tags:
        - Events
    x-restlet:
      section: Schedules
    parameters: []
  /events/visitRegistration:
    post:
      summary: регистрация предварительной записи на посещение клуба
      description: |-
        Выполняет регистрацию предварительной записи на посещение клуба

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: visitRegistration
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
              dateStart:
                type: string
                description: дата начала персональной записи
              dateEnd:
                type: string
                description: Дата окончания предварительной записи
              roomId:
                type: string
                description: Идентификатор помещения
            required:
              - gymId
              - dateStart
              - dateEnd
              - roomId
          x-examples: {}
          description: ''
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymList:
                type: array
                description: список идентификаторов клубов
                items:
                  type: string
              startDate:
                type: string
                format: date
                description: дата начала
                example: '2019-07-01T13:00:00'
              endDate:
                type: string
                format: date
                description: дата окончания
                example: '2019-07-15T00:00:00'
              serviceDescriptionId:
                type: string
                description: идентификатор описания услуги
              employeeId:
                type: string
                description: идентификатор сотрудника
            required:
              - gymList
              - startDate
              - endDate
          x-examples:
            example-1: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              pageType:
                type: string
                enum:
                  - payment
                  - activity
                description: тип следующей страницы
            required:
              - pageType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: visitRegistration
      tags:
        - Events
    x-restlet:
      section: Schedules
    parameters: []
  /cachvalue/paymentService:
    post:
      summary: Долги клиента к оплате
      description: |-
        Метод возвращает количество и сумму услуг к оплате

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: updatePaymentService
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            description: Остсток депозита
            properties:
              quantity:
                type: number
                description: Количество услуг к оплате
              amount:
                type: number
                description: сумма услуг к оплате
            required:
              - quantity
              - amount
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
            required:
              - result
              - description
      tags:
        - Customers
      operationId: membershipFreezing
    x-restlet:
      section: CacheValuesTypes
    parameters: []
  /cachvalue/bonus:
    post:
      summary: Баланс бонусов клиента
      description: |-
        Метод возвращает остаток бонусов клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: updateBonus
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            description: Остсток депозита
            properties:
              amount:
                type: string
                description: Остаток бонусов
            required:
              - amount
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
            required:
              - result
              - description
      tags:
        - Customers
      operationId: membershipFreezing
    x-restlet:
      section: CacheValuesTypes
    parameters: []
  /customers/changeFamilyAcc:
    post:
      summary: Изменить доступ к семейному счету
      operationId: changeFamilyAcc
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              result:
                type: string
      description: |-
        Добавить/изменить доступы к семейному счету клиента

        Ответственный  
      parameters:
        - $ref: '#/parameters/content-type'
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: уид клиента
                name:
                  type: string
                  description: имя клиента
                accountList:
                  type: array
                  items:
                    type: object
                    properties:
                      accountType:
                        type: string
                        description: тип ресурса
                        enum:
                          - paymentCard
                          - bonus
                          - deposit
                      account:
                        type: object
                        required:
                          - uid
                          - name
                        description: ресурс
                        properties:
                          uid:
                            type: string
                            description: уид ресурса
                          name:
                            type: string
                            description: имя ресурса
                      used:
                        type: boolean
                        description: доступность ресурса
                    required:
                      - accountType
                      - account
                      - used
              required:
                - uid
                - name
                - accountList
          description: ''
      tags:
        - Customers

  /customers/signaturedocs:
    post:
      summary: Подписанные документы клиента
      operationId: signaturedocs
      parameters:
        - $ref: '#/parameters/content-type'
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              printObjectGUID:
                type: string
                description: Идентификатор объекта
      responses:
        '200':
              description: Выполнение запроса завершилось успешно
              schema:
                type: array
                items:
                  type: object
                  properties:
                    printDoc:
                      type: string
                      description: Объект документа
                    createDate:
                      type: string
                      description: дата регистрации документа
                    signDate:
                      type: string
                      description: дата подписи документа
                    docLink:
                      type: string
                      description: ссылка на документ в формате pdf
                  required:
                    - printDoc
                    - createDate
                    - docLink
        '401':
              description: Пользователь не идентифицирован
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - userNotIdentified
                  description:
                    type: string
                    default: User not identified
        '403':
              description: Выполнение запроса завершилось ошибкой
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: код ошибки
                  description:
                    type: string
                    description: описание ошибки
      x-examples: { }
      tags:
        - Customers
  /info/eventInfo:
    post:
      summary: описание события - 15.2.1 - 15.2.3
      description: |-
        Возвращает описание события (предварительной записи, группового занятия, посещения или гостевого визита)

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: eventInfo
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              docId:
                type: string
                description: Идентификатор документа
              docType:
                type: string
                description: 'Тип документа '
                enum:
                  - personal
                  - group
                  - visit
                  - guestVisit
            required:
              - docId
              - docType
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              serviceList:
                type: array
                description: Список услуг
                items:
                  type: object
                  properties:
                    service:
                      $ref: '#/definitions/service'
                    debt:
                      type: boolean
                      description: ожидает оплаты
                    amount:
                      type: number
                      description: сумма к оплате
                    uid:
                      type: string
                      description: идентификатор описания услуги
                  required:
                    - service
                    - debt
                    - uid
              startDate:
                type: string
                description: дата начала события
              endDate:
                type: string
                description: дата окончания события
              gym:
                type: object
                description: клуб
                required:
                  - uid
                  - name
                properties:
                  uid:
                    type: string
                    description: идентификатор клуба
                  name:
                    type: string
                    description: наименование клуба
              room:
                type: object
                description: помещение
                properties:
                  uid:
                    type: string
                    description: идентификатор помещения
                  name:
                    type: string
                    description: наименование помещения
                required:
                  - uid
                  - name
              employee:
                type: object
                description: сотрудник
                properties:
                  uid:
                    type: string
                    description: идентификатор сотрудника
                  firstName:
                    type: string
                    description: имя сотрудника
                  lastName:
                    type: string
                    description: Фамилия сотрудника
                required:
                  - uid
                  - firstName
                  - lastName
              additionalParameter:
                type: object
                description: дополнительные параметры
                properties:
                  onlyMembers:
                    type: boolean
                    description: только для членов клуба
                  onlyWithParents:
                    type: boolean
                    description: приобязательном участии родителей
                  isPrePaid:
                    type: boolean
                    description: по предоплате
                  studentLevel:
                    type: string
                    description: уровень подготовки
                    enum:
                      - any
                      - beginner
                      - medium
                      - high
                  isPreBooked:
                    type: boolean
                    description: по предварительной записи
                  ageMin:
                    type: number
                    description: минимальный возраст (месяц)
                  ageMax:
                    type: number
                    description: максимальный возраст (месяц)
                required:
                  - onlyMembers
                  - onlyWithParents
                  - isPrePaid
                  - isPreBooked
              docId:
                type: string
                description: идентификатор документа
              docType:
                type: string
                description: тип документа
                enum:
                  - personal
                  - group
                  - visit
                  - guestVisit
              duration:
                type: number
                description: длительность (мин)
              canCancel:
                type: boolean
                description: возможность отмены
              externalRefs:
                type: array
                description: Список ссылок
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: тип ресурса
                      enum:
                        - youtube
                        - instagram
                    ref:
                      type: string
                      description: ссылка на ресурс
                  required:
                    - type
                    - ref
              objectiveList:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор цели
                    name:
                      type: string
                      description: наименование цели
                    color:
                      type: string
                      description: цвет
              urlZoom:
                type: string
                description: Ссылка на Zoom
            required:
              - serviceList
              - startDate
              - endDate
              - gym
              - docId
              - docType
              - duration
              - canCancel
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
      operationId: eventInfo
    x-restlet:
      section: Information
    parameters: []
  /user/userCache:
    x-restlet:
      section: Lists
    post:
      summary: кэш клиента
      description: |-
        Возвращает значения запрашиваемого кэша

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: userCache
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            description: список имен кэша
            properties:
              page:
                type: string
                enum:
                  - homePage
                  - personalPage
            required:
              - page
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            description: массив свободных дат и времени
            properties:
              banners:
                type: array
                items:
                  type: object
                  properties:
                    photo:
                      type: object
                      properties:
                        mobile:
                          type: string
                        web:
                          type: string
                    url:
                      type: string
                  required:
                    - photo
                    - url
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Users
      operationId: userCache
    parameters: []
  /customers/membershipActivation:
    post:
      summary: активация абонемента
      description: |-
        Метод выполняет активацию абонемента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: membershipActivation
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Идентификатор абонемента
              activationDate:
                type: string
                description: Дата начала контракта
                format: date
            required:
              - uid
              - activationDate
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              startDate:
                type: string
                description: Дата начала абонемента
                format: date
              endDate:
                type: string
                format: date
                description: Дата окончания абонемента
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            required:
              - result
              - description
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Customers
      operationId: membershipActivation
    x-restlet:
      section: Customers
    parameters: []
  /events/cancelPersonalRegistration:
    post:
      summary: отмена предварительной записи
      description: |-
        Выполняет отмену предварительной записи клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: cancelPersonalRegistration
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              docId:
                type: string
                description: идентификатор документа
            required:
              - docId
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат выполнения
              description:
                type: string
                description: детали результата выполнения
            required:
              - result
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: cancelPersonalRegistration
      tags:
        - Events
    x-restlet:
      section: events
    parameters: []
  /lists/notificationList:
    post:
      summary: список уведомлений - (CONNECT)
      description: |-
        Возвращает список уведломленией

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: notificationList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              date:
                type: string
                description: дата отсечения
            required:
              - date
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                noteId:
                  type: string
                  description: идентификатор уведомления
                date:
                  type: string
                  description: дата регистрации уведомления
                title:
                  type: string
                  description: заголовок
                text:
                  type: string
                  description: текст уведомления
                read:
                  type: boolean
                  description: уведомление прочитано
                objectId:
                  type: string
                  description: 'идентификатор объекта '
                objectType:
                  type: string
                  description: тип объекта
              required:
                - noteId
                - date
                - title
                - text
                - read
                - objectId
                - objectType
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Lists
      operationId: notificationList
    x-restlet:
      section: Lists
    parameters: []
  /events/readNotification:
    post:
      summary: прочитать уведомления (CONNECT)
      description: |-
        помечает прочитанными уведомление/уведломления

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: readNotification
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              noteId:
                type: string
                description: идентификатор уведомления
          x-examples: {}
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                result:
                  type: string
                  description: результат
              required:
                - result
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: readNotification
      tags:
        - Events
    x-restlet:
      section: Lists
    parameters: []
  /events/readNotificationNew:
    post:
      summary: прочитать массив уведомлений (CONNECT)
      description: |-
        помечает прочитанными уведомление/уведломления

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: readNotificationNew
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Notes:
                type: array
                description: массив uid-ов
                items:
                  type: string
                  description: uid
          x-examples: { }
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат
              quantity:
                type: integer
                description: кол-во не обработанных сообщений
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: readNotificationNew
      tags:
        - Events
    x-restlet:
      section: Lists
    parameters: [ ]
  /info/unReadNotificationCount:
    post:
      summary: количество не прочитанных уведомлений (CONNECT)
      description: |-
        Возвращает количество не прочитанных уведломлений

        Ответственный IT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: unReadNotificationCount
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              quantity:
                type: number
                description: количество не прочитанных уведломлений
            required:
              - quantity
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      tags:
        - Information
      operationId: unReadNotificationCount
    x-restlet:
      section: Information
    parameters: []
  x-restlet:
    sections:
      Logs: {}
      Doc: {}
      General:
        description: Основные методы ЛК
      Users:
        description: Методы относящиеся к пользователю личного кабинета
      Customers:
        description: Методы относящиеся к данным клиента
      Information:
        description: детализированная информация по различным объектам
      Schedules:
        description: События
      Lists: {}
      CacheValuesTypes: {}
      Temp: {}
      Cache:
        description: 'информация, получаемая из кеша в Коннекте'
    texts:
      ppl23q3:
        title: 26.09.2019
        content: |-
          Внесены изменения в методы:

          * [история бонусных операций](https://wclass.restlet.io/#operation__________________________)
          * [расписание занятий в клубе/клубах - 18.1](https://wclass.restlet.io/#operation___________________________________-_18_1)
          * [активности пользователя 15.1](https://wclass.restlet.io/#operation_________________________15_1)

          Методы готовые к тестированию:
          * [история бонусных операций](https://wclass.restlet.io/#operation__________________________)
        section: Logs
      lk1ezbh:
        title: 25.09.2019
        content: "Внесены изменения в методы:\n\n* [описание сотрудника - 21.2](https://wclass.restlet.io/#operation_____________________-_21_2)\n\tдобавлены теги\n\n* [cписок абонементов - 8.1; 8.2](https://wclass.restlet.io/#operation_c__________________-_8_1__8_2)\n\nДобавлено описание для методов:\n\n* [список услуг и подарков абонемента - 8.4](https://wclass.restlet.io/#operation____________________________________-_8_4)"
        section: Logs
      t0xsv9s:
        title: 24.09.2019
        content: |-
          Методы готовые к тестированию:

          * [семейный счет - 11.1](https://wclass.restlet.io/#operation_______________-_11_1)
          * [связанные клиенты - 11.2.1](https://wclass.restlet.io/#operation___________________-_11_2_1)
        section: Logs
      9xrzmhp:
        title: 23.09.2019
        content: |
          Добавлено описание для методов:
          * [список сотрудников - 21.1](https://wclass.restlet.io/#operation____________________-_21_1)
          * [описание сотрудника - 21.2](https://wclass.restlet.io/#operation_____________________-_21_2)
          * [список услуг - 19.1](https://wclass.restlet.io/#operation______________-_19_1)
          * [описание услуги - 19.2](https://wclass.restlet.io/#operation_________________-_19_2)
          * [прайс лист абонементов - 8.5](https://wclass.restlet.io/#operation________________________-_8_5)
          * [описание абонемента для покупки - 8.6; 8.7](https://wclass.restlet.io/#operation_________________________________-_8_6__8_7)
        section: Logs
      4wqvqg1:
        title: 20.09.2019
        content: |+
          Методы готовые к тестированию:
          * [история финансовых операций 12.1; 12.2](https://wclass.restlet.io/#operation_____________________________12_1__12_2)
          * [расписание занятий в клубе/клубах - 18.1](https://wclass.restlet.io/#operation___________________________________-_18_1)
          * [активности пользователя 15.1](https://wclass.restlet.io/#operation_________________________15_1)

          Добавлено описание для методов:
          * [прайс лист пакетов услуг - 9.2](https://wclass.restlet.io/#operation__________________________-_9_2)
          * [конструктор пакетов услуг - 9.3](https://wclass.restlet.io/#operation___________________________-_9_3)

        section: Logs
      p9793d2:
        title: ошибки
        content: |+


          | Код ошибки| Description | Описание |
          | -------- | -------- | -------- |
          | noAppVersion     | No app version     | Не указана версия приложения     |

        section: Doc
      12voqix:
        title: установка/запуск приложения
        content: |+
          1. Пользователь скачал приложение/запустил приложение
          2. Отпрваляется запрос [General/config](https://wclass.restlet.io/#operation_______________________________________). Возвращает информацию об актуальной версии приложения
          3. Отправлеется запрос [General/registerDevice](https://wclass.restlet.io/#operation_______________________). Возвращается токен сеанса (auth-key), а так же всю информацию по данному сеансу.



        section: Doc
  /user/changeProfile:
    post:
      summary: изменить данные профайла клиента
      operationId: changeProfile
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
      tags:
        - Users
      description: |-
        Изменяет данные профайла клиента
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: changeProfile
        - type: string
          in: header
          name: language
          required: true
          description: язык интерфейса
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
                description: электронная почта
              birthday:
                type: string
                description: дата рождения
              lastName:
                type: string
                description: Фамилия
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              gender:
                type: string
                description: пол
                enum:
                  - male
                  - female
                  - none
              noSubscriptionEmail:
                type: boolean
                description: отказ от получения электронных писем
              noSubscriptionSms:
                type: boolean
                description: отказ от получения смс
          description: ''
    parameters: []
  /cache/generalCache:
    post:
      summary: Запрос информации из кэша
      description: |-
        Возвращает кэшированную информацию по запрошенным секциям

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: generalCache
        - name: body
          in: body
          required: true
          x-examples: {}
          schema:
            type: object
            properties:
              types:
                type: array
                description: массив типов кэша ("секций")
                items:
                  type: string
                  enum:
                    - availableServiceList
                    - balance
                    - bannerList
                    - bonus
                    - familyAccount
                    - financialHistory
                    - membershipInfo
                    - nearestService
                    - packageInfo
                    - paymentPackage
                    - rentedLockerList
                    - support
                    - nearestEvent
                    - clientObjectives
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              packageInfo:
                type: object
                description: Информация по КК
                properties:
                  active:
                    type: number
                    description: количество активных карт
                  waiting:
                    type: number
                    description: Количество ожидающих оплаты
                  endDate:
                    type: string
                    description: 'максимальная дата окончания, если осталось 30 дней'
                required:
                  - active
                  - waiting
              membershipInfo:
                type: object
                description: Информация по членским картам
                properties:
                  active:
                    type: number
                    description: количество активных карт
                  waiting:
                    type: number
                    description: Количество ожидающих оплаты
                  endDate:
                    type: string
                    description: 'максимальная дата окончания, если осталось 30 дней'
                  new:
                    type: boolean
                    description: стаж клиента
                required:
                  - active
                  - waiting
              balance:
                type: integer
                description: Остаток баланса
              bonus:
                type: integer
                description: |
                  остаток бонусов
              rentedLockerList:
                type: array
                description: Аренда ячеек
                items:
                  type: object
                  properties:
                    locker:
                      type: string
                      description: Название арендуемой ячейки
                    expirationDate:
                      type: string
                      description: Дата окончания аренды
                  required:
                    - locker
                    - expirationDate
              paymentPackage:
                type: object
                description: Секция "К оплате"
                properties:
                  quantity:
                    type: number
                    description: Количество к оплате
                  amount:
                    type: integer
                    description: Сумма к оплате
                required:
                  - quantity
                  - amount
              bannerList:
                type: object
                description: баннеры
                properties:
                  url:
                    type: string
                    description: URL
                  photoWeb:
                    type: string
                    description: картинка для веба
                  photoMobile:
                    type: string
                    description: картинка для мобильных
                required:
                  - url
                  - photoWeb
                  - photoMobile
              nearestService:
                type: object
                description: ближайшая запись
                properties:
                  docId:
                    type: string
                    description: идентификатор документа записи
                    minLength: 36
                    maxLength: 36
                  docType:
                    type: string
                    description: 'тип документа записи: personal - ПЗ, group - ГЗ'
                  startDate:
                    type: string
                    description: 'время начала события в формате YYYY-MM-DDThh:mm:ss'
                  endDate:
                    type: string
                    description: 'время окончания события в формате YYYY-MM-DDThh:mm:ss'
                  gym:
                    type: object
                    description: объект gym
                    properties:
                      uid:
                        type: string
                      name:
                        type: string
                    required:
                      - uid
                      - name
                  employee:
                    type: object
                    description: объект employee
                    properties:
                      uid:
                        type: string
                      firstName:
                        type: string
                      lasstName:
                        type: string
                    required:
                      - uid
                      - firstName
                      - lasstName
                  service:
                    description: объект service
                    type: object
                    properties:
                      uid:
                        type: string
                      name:
                        type: string
                      shortDescription:
                        type: string
                    required:
                      - uid
                      - name
                      - shortDescription
                  room:
                    type: object
                    description: объект room
                    properties:
                      uid:
                        type: string
                      name:
                        type: string
                    required:
                      - uid
                      - name
                required:
                  - docId
                  - docType
                  - startDate
                  - endDate
              availableServiceList:
                type: array
                description: Доступные купоны
                items:
                  description: объект product
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                    shortDescription:
                      type: string
                  required:
                    - uid
                    - name
                    - shortDescription
              reserveBalance:
                type: number
                description: зарезервировано с депозита
              clientObjectives:
                type: array
                items:
                  description: объект
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор цели клиента
              nearestEvent:
                type: object
                properties:
                  uid:
                    type: string
                    description: идентификатор события
                  name:
                    type: string
                    description: наименование события
                  eventStart:
                    type: string
                    description: дата начала события
                  eventEnd:
                    type: string
                    description: дата окончания события
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: generalCache
      tags:
        - Cache
    x-restlet:
      section: Cache
    parameters: []
  /cache/clearCache:
    post:
      summary: Очистка информации кэша
      description: |-
        Очищает кэшированную информацию по запрошенным секциям
        Очищаются записи, зарегистрированные ДО переданной даты

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: clearCache
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              date:
                type: string
                description: Дата регистрации кэша, до которой нужно его очистить (дата-время, универсальное)
              types:
                type: array
                description: массив типов кэша ("секций")
                items:
                  type: string
                  enum:
                    - availableServiceList
                    - balance
                    - bannerList
                    - bonus
                    - familyAccount
                    - financialHistory
                    - membershipInfo
                    - nearestService
                    - packageInfo
                    - paymentPackage
                    - rentedLockerList
                    - support
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: string
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: clearCache
      tags:
        - Cache
    x-restlet:
      section: Cache
  /general/availableFeatures:
    post:
      summary: Запрос доступных функций
      description: |-
        Возвращает доступные функции на основании chain из token'а

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: availableFeatures
          required: true
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              availableFeatures:
                $ref: '#/definitions/cacheTypes'
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: availableFeatures
      tags:
        - Cache
    x-restlet:
      section: General
    parameters: []
  /polls/pollList:
    post:
      summary: Доступные пользователю опросы
      description: |-
        Возвращает перечень активных опросов

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: pollList
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                pollId:
                  type: string
                  description: идентификатор опроса
                isCompleted:
                  type: boolean
                  description: Помечен пользователем как завершенный
                endDate:
                  type: string
                  format: date
                  description: дата окончания опроса
                title:
                  type: string
                  description: Заголовок опроса
      operationId: pollList
      tags:
        - Polls
  /polls/pollInfo:
    post:
      summary: Опрос
      description: |-
        Наполнение опроса пользователя с выбранными ответами

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: pollInfo
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              pollId:
                type: string
                description: идентификатор опроса
            required:
              - pollId
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                  description: Заголовок опроса
                intro:
                  type: string
                  description: Формулировка вступления к опросу
                outro:
                  type: string
                  description: Формулировка заключения опросу
                section:
                  type: string
                  description: Наименование раздела вопросов
                content:
                  type: array
                  description: Вопросы опроса
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор вопроса
                      title:
                        type: string
                        description: формулировка вопроса
                      type:
                        type: string
                        description: тип вопроса
                        enum:
                          - oneOf
                          - severalOf
                      answerList:
                        type: array
                        description: варианты ответа
                        items:
                          type: object
                          properties:
                            uid:
                              type: string
                              description: идентификатор варианта ответа
                            title:
                              type: string
                              description: заголовок варианта
                            order:
                              type: number
                              description: порядок варианта
                            answer:
                              type: string
                              description: формулировка варианта (в т.ч. пользовательская)
                            needComment:
                              type: boolean
                              description: необходимость комментария к варианту ответа
                            isSelected:
                              type: boolean
                              description: вариант выбран
                            comment:
                              type: string
                              description: комментарий - развернутый ответ на вопрос
                            type:
                              type: string
                              description: тип ответа, уточнение для варианта, который на самом деле не вариант,
                                а выбор значения
                              enum:
                                - string
                                - date
                                - number
                                - gym
                            length:
                              type: number
                              description: ограничение длины ответа
                            precision:
                              type: number
                              description: точность (для чисел)
                            minValue:
                              type: number
                              description: минимальное значение (для чисел)
                            maxValue:
                              type: number
                              description: максимальное значение (для чисел)
      operationId: pollInfo
      tags:
        - Polls
  /polls/pollAnswer:
    post:
      summary: Ответ опроса
      description: |-
        Фиксация ответа пользователя

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: pollAnswer
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              pollId:
                type: string
                description: идентификатор опроса
              questionId:
                type: string
                description: идентификатор вопроса
              answerList:
                type: array
                description: ответы, если массив пустой, то происходит очистка
                items:
                  type: object
                  properties:
                    variantId:
                      type: string
                      description: идентификатор варианта ответа (для выбора значения смысла не имеет)
                    answer:
                      type: string
                      description: ответ на вопрос
                    comment:
                      type: string
                      description: комментарий - развернутый ответ на вопрос
            required:
              - pollId
              - questionId
      responses:
          '200':
            description: Выполнение запроса завершилось успешно
            schema:
              type: object
              description: ответ об операции
              properties:
                result:
                  type: string
                  description: формальный ответ ОК - если ответ принят
      operationId: pollAnswer
      tags:
        - Polls
  /polls/pollComplete:
    post:
      summary: Завершить опрос
      description: |-
        Установка признака завершения опроса пользователя

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: pollComplete
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              pollId:
                type: string
                description: идентификатор опроса
            required:
              - pollId
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            description: ответ об операции
            properties:
              result:
                type: string
                description: формальный ответ ОК - если ответ принят
      operationId: pollComplete
      tags:
        - Polls
  /user/changeSubscribe:
    post:
      summary: изменить данные профайла клиента
      operationId: changeSubscribe
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
      tags:
        - Users
      description: |-
        Изменяет данные профайла клиента
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: changeProfile
        - type: string
          in: header
          name: language
          required: true
          description: язык интерфейса
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              noSubscriptionEmail:
                type: boolean
                description: отказ от получения электронных писем
              noSubscriptionSms:
                type: boolean
                description: отказ от получения смс
          description: ''
    parameters: []
  /info/courseInfo:
    post:
      summary: Состав курса 25.3.1
      operationId: courseInfo
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                groupName:
                  type: string
                  description: имя группы
                uid:
                  type: string
                  description: уникальный идентификатор файла
                name:
                  type: string
                  description: имя файла
                type:
                  type: string
                  description: тип файла
                  enum:
                    - video
                    - file
                size:
                  type: string
                  description: длительность видео или размер файла
                availableForDownload:
                  type: boolean
                  description: доступность скачивания
                photo:
                  type: string
                  description: ссылка на фото
              required:
                - groupName
                - uid
                - name
                - type
                - size
                - availableForDownload
                - photo
      description: |-
        состав курса
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: наименование запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: уникальный идентификатор курса
            required:
              - uid
      tags:
        - Information
    parameters: []
  /info/fileInfo/:
    parameters: []
    post:
      summary: 'Информация о файле 25.4.1, 25.4.2'
      operationId: fileInfo
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              name:
                type: string
                description: имя
              url:
                type: string
                description: ссфлка на файл
              type:
                type: string
                description: тип файла
                enum:
                  - video
                  - file
              description:
                type: string
                description: описание файла
              availableForDownload:
                type: boolean
                description: доступно для загрузки
            required:
              - name
              - url
              - type
              - description
              - availableForDownload
      description: информация о файле
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор файла
            required:
              - uid
      tags:
        - Information
  /info/myCourses:
    post:
      summary: мои курсы
      operationId: myCourses
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: наименование описания
                uid:
                  type: string
                  description: Идентификатор описания номенклатуры
                price:
                  type: number
                  description: 'цена, если отсутствует - не отображать, если =0 бесплатная'
                entryList:
                  type: array
                  description: список идентификаторов услуг входящих в описание
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                        description: идентификатор услуги
                      entryType:
                        type: string
                        description: тип услуги
                        enum:
                          - personal
                          - group
                          - course
                          - lesson
                    required:
                      - uid
                      - entryType
                tagList:
                  type: array
                  description: теги
                  items:
                    $ref: '#/definitions/tag'
                photo:
                  type: string
                  description: фото
                shortDescription:
                  type: string
                  description: краткое описание
              required:
                - uid
                - name
                - shortDescription
                - photo
                - tagList
                - entryList
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          required: true
          type: string
          description: наименование запроса
          default: productList
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: идентификатор клуба
                example: cc35e9b2-d155-11e4-80d1-005056810138
              direction:
                type: string
                description: бизнес направление услуги
                enum:
                  - fitness
                  - spa
              entryType:
                type: array
                items:
                  type: object
                  properties:
                    entryType:
                      type: string
                      description: тип услуги
                      enum:
                        - course
                        - lesson
                        - personal
                        - group
                  required:
                    - entryType
            required:
              - gymId
              - direction
              - entryType
          x-examples: {}
          description: ''
      tags:
        - Lists
      description: Возвращает список курсов клиента
      produces:
        - application/json
      consumes:
        - application/json
    parameters: []
    x-restlet:
      section: Lists
  /events/addToMyCourses:
    parameters: []
    post:
      summary: Добавить в мои курсы(для бесплатных курсов)
      operationId: addToMyCourses
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
            required:
              - result
      description: |
        ответсвенный 
      tags:
        - Events
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - in: body
          name: body
          schema:
            type: object
            properties:
              gym:
                type: string
                description: идентификатор клуба
              uid:
                type: string
                description: идентификатор курса
            required:
              - gym
              - uid
  /events/delFromMyCourses:
    parameters: []
    post:
      summary: Добавить в мои курсы(для бесплатных курсов)
      operationId: delFromMyCourses
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
            required:
              - result
      description: ответсвенный 
      tags:
        - Events
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор курса
            required:
              - uid
  /service/sendRestrictions:
    put:
      summary: Отправить группы ограничений доступа к методам API
      operationId: put-service-sendRestrictions
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
      description: |-
        Выполняет запись групп ограничений доступа к методам API в КПО
        Ответственный IT
      tags:
        - KPO
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              restrictionsList:
                type: array
                description: список групп ограничений
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор группы ограничений
                    name:
                      type: string
                      description: наименование группы ограничений
                    chainId:
                      type: string
                      description: 'идентификатор сети '
                  required:
                    - uid
                    - name
                    - chainId
            required:
              - restrictionsList
        - type: string
          in: header
          name: language
          description: язык интерфейса клиента
          required: true
  /service/getRestrictions:
    put:
      summary: Получить ограничения доступа к методам API
      operationId: put-service-getRestrictions
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                userId:
                  type: string
                  description: идентификатор пользователя
                restrictionsId:
                  type: string
                  description: идентификатор группы ограничений
              required:
                - userId
                - restrictionsId
      tags:
        - KPO
      description: |
        Выполняет получение настроек ограничений доступа к методам API
        Ответственный IT
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: language
          required: true
          description: язык интерфейса клиента
        - in: body
          name: body
          schema:
            type: object
            properties:
              chainId:
                type: string
                description: идентификатор сети
            required:
              - chainId
  /general/changeChain:
    parameters: []
    post:
      summary: сменить город
      operationId: changeChain
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: 'если истина, то усепшно нашелся клиент и никаких манипуляций не нужно, если ложь - то надо запросить создание нового юзера в новом городе'
            required:
              - success
      tags:
        - General
      description: |-
        бесшовная интеграция, при переключении на новый город
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
  /service/clickExternalLink:
    post:
      summary: Переход по внешней ссылке
      operationId: post-service-clickExternalLink
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
      description: |-
        Выполняется регистрация факта перехода по внешней ссылке
        Ответственный IT
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
          default: application/json
        - type: string
          in: header
          name: request
          required: true
          description: наименование запроса
          default: clickExternalLink
        - type: string
          in: header
          name: language
          required: true
          description: язык интерфейса клиента
          default: En
        - type: string
          in: header
          name: brand
          description: бренд
          required: true
          default: WorldClass
        - type: string
          in: header
          name: auth-key
          description: ключ авторизации (токен)
          required: true
          default: 4f1225f6-cb40-11e9-bba8-005056b11c470
        - in: body
          name: body
          schema:
            type: object
            properties:
              docId:
                type: string
                description: идентификатор документа
              docType:
                type: string
                description: тип документа
                enum:
                  - personal
                  - group
              externalRef:
                type: string
                description: внешняя ссылка
              externalTypeRef:
                type: string
                description: тип внешней ссылки
                enum:
                  - youtube
                  - instagram
                  - zoom
            required:
              - docId
              - docType
              - externalRef
              - externalTypeRef
      tags:
        - Service
  /general/addUser:
    post:
      summary: добавить клиента
      operationId: addUser
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - fail
                  - ok
                description: результат выполнения запроса
            required:
              - result
      description: |-
        добавляет клиента в новый город
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
      tags:
        - General
  /customers/reserveDecr:
    post:
      summary: Расшифровка резервов
      operationId: reserveDecr
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: имя аванса
                debt:
                  type: string
                  description: долг
                amount:
                  type: number
                  description: сумма
                quantity:
                  type: number
                  description: количество
              required:
                - name
                - debt
                - amount
                - quantity
      description: 'Расшифровка резервов, Ответственный '
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              type:
                type: string
                enum:
                  - deposit
                  - package
                  - target
          description: ''
      tags:
        - Customers
  /events/feedback:
    post:
      summary: Регистрация обратной связи
      operationId: feedback
      tags:
        - Events
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                description: В настоящее время используется строковая константа "Ok"
              description:
                type: string
              requestToken:
                type: string
                description: Номер созданного бизнес-процесса
            required:
              - requestToken
          examples: {}
          headers: {}
      description: |-
        Регистрация обратной связи: создание задач для сотрудников, создание новых профилей клиентов по переданным контактным данным, уточнение контактных данных в найденных профилях.

        Ответственный
      parameters:
        - type: string
          in: header
          name: content-type
          description: MIME-тип
          x-deprecated: false
          required: true
          default: application/json
        - type: string
          in: header
          name: request
          description: Имя запроса
          required: true
          default: feedback
        - type: string
          in: header
          name: language
          description: Язык интерфейса клиента
          required: true
          default: En
        - type: string
          in: header
          name: brand
          description: Бренд
          default: WorldClass
          x-deprecated: false
          pattern: ''
          required: true
        - type: string
          in: header
          name: auth-key
          description: Токен
          pattern: ''
          required: true
          default: fac27165-c295-11ea-bbc2-005056b11c47242
        - in: body
          name: body
          schema:
            type: object
            properties:
              gymId:
                type: string
                description: Идентификатор клуба
              directionId:
                type: string
                description: Идентификатор должности
              requestTypeId:
                type: string
                description: Идентификатор типа обращения
              membershipTypeId:
                type: string
                description: 'Тип контракта: 1-индивидуальный, 2-корпоративный'
              content:
                type: string
                description: Содержание обращения
              content2...contentn:
                type: string
                description: 'Части содержимого обращения, при невозможности уместить все в одном параметре'
              currentTime:
                type: string
                description: Текущая дата сеанса клиента
              company:
                type: string
                description: Название компании
              userId:
                type: string
                description: Идентификатор клиента (uid элемента справочника контрагенты)
              lastName:
                type: string
                description: Фамилия
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              phone:
                type: string
                description: Телефон
              email:
                type: string
                description: e-mail
              referer:
                type: string
                description: UTM-метки
              tildaspecreferer:
                type: string
                description: Реферер запроса с сайта
              tildaspecformid:
                type: string
                description: Идентификатор формы на сайте
              tildaspecformname:
                type: string
                description: Имя формы на сайте
              tildaspecpageid:
                type: string
                description: Идентификатор страницы сайта
              tildaspecprojectid:
                type: string
                description: Идентификатор проекта
              requestSubjectId:
                type: string
                description: Тема обращения
            required:
              - currentTime
              - lastName
              - firstName
              - phone
  /lists/feedbackCatalog:
    post:
      summary: Справочники обратной связи
      tags:
        - Lists
      responses:
        '200':
          description: OK
      operationId: get-lists-feedbackCatalog
      description: |-
        Получает справочники обратной связи
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              requestTypeList:
                type: array
                description: ТипыОбращенияКонтрагентов
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: ГУИД
                    name:
                      type: string
                      description: ИМЯ
                  required:
                    - uid
                    - name
              directionList:
                type: array
                description: МассивДолжностей
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                  required:
                    - uid
                    - name
              requestSubjectList:
                type: array
                description: МассивТематик
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                  required:
                    - uid
                    - name
              membershipTypeList:
                type: array
                description: МассивТипов абонементов
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                  required:
                    - uid
                    - name
              taskMapping:
                type: array
                description: МассивМаршрутов
                items:
                  type: object
                  properties:
                    requestTypeId:
                      type: string
                      description: тип обращения контрагентов
                    directionId:
                      type: string
                      description: гуид направления
                    requestSubjectId:
                      type: string
                      description: гуид тематики
                    membershipTypeId:
                      type: string
                      description: тип абонемента
                  required:
                    - requestTypeId
                    - directionId
                    - requestSubjectId
                    - membershipTypeId
              dataSourceList:
                type: array
                description: источники информации
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    name:
                      type: string
                  required:
                    - uid
                    - name
            required:
              - requestTypeList
              - directionList
              - requestSubjectList
              - membershipTypeList
              - taskMapping
              - dataSourceList
  /payment/getQr:
    post:
      summary: Получить QR код для оплаты
      operationId: post-payment-getQr
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              qrId:
                type: string
                description: идентификатор qr кода
              qrUrl:
                type: string
                description: урл картинки qr кода
            required:
              - qrId
              - qrUrl
      tags:
        - Payment
        - KPO
      description: |-
        Генерирует qr код в СБП
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              docList:
                type: array
                description: гуиды заявок на оплату
                items:
                  type: string
              paymentAmount:
                type: number
                description: сумма оплаты
              customerId:
                type: string
                description: гуид клиента
            required:
              - docList
              - paymentAmount
              - customerId
  /customers/getCustomer:
    post:
      summary: 'Получить список клиентов 8.12.3, 8.12.4'
      operationId: getCustomer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор клиента
                cid:
                  type: string
                  description: код клиента
                lastName:
                  type: string
                  description: Фамилия
                firstName:
                  type: string
                  description: Имя
                secondName:
                  type: string
                  description: Отчество
                phoneNumber:
                  type: string
                  description: номер телефона
              required:
                - uid
                - cid
                - lastName
                - firstName
                - secondName
                - phoneNumber
      tags:
        - Customers
      description: |-
        Получает список клиентов по переданному значению отбора. В качестве подстроки поиска может выступать код клиента или его телефон.
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: код языка
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              subStr:
                type: string
                description: код клиента или номер телефона
            required:
              - subStr
  /customers/addNewCustomer:
    post:
      summary: Добавить нового клиента 8.13
      operationId: addNewCustomer
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              error:
                type: string
                description: описание ошибки
                enum:
                  - IncorrectParameter
                  - CustomerAlreadyExistName
                  - CustomerAlreadyExistPhone
              uid:
                type: string
                description: идентификатор клиента
              userCode:
                type: string
                description: код клиента
      description: |-
        добавляет клиента в базу кпо, если нет совпадений по ФИО+датарождения или номеру телефона

        Ответственный  
      tags:
        - Customers
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: Имя
              lastName:
                type: string
                description: Фамилия
              secondName:
                type: string
                description: Отчество
              phoneNumber:
                type: string
                description: номер телефона
              email:
                type: string
                description: электронная почта
              relation:
                type: string
                description: связь с клиентом
                enum:
                  - mother
                  - father
                  - son
                  - other
                  - daughter
              birthdate:
                type: string
                description: дата рождения
              gender:
                type: string
                description: пол
                enum:
                  - male
                  - female
            required:
              - firstName
              - lastName
              - birthdate
          description: ''
  /customers/findCustomers:
    post:
      summary: 'Поиск клиента семейного счета 11.2.1, 11.2.2, 11.2.3'
      operationId: findCustomers
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              uid:
                type: string
                description: 'идентификатор клиента, которому предоставляют доступ'
              name:
                type: string
                description: 'имя клиента, которому предоставляют доступ'
              accountList:
                type: array
                description: список доступных ресурсов
                items:
                  type: object
                  properties:
                    accountType:
                      type: string
                      description: тип ресурса
                      enum:
                        - deposit
                        - bonus
                        - paymentCard
                    account:
                      type: object
                      required:
                        - uid
                        - name
                      properties:
                        uid:
                          type: string
                          description: идентификатор ресурса
                        name:
                          type: string
                          description: имя ресурса
                    used:
                      type: string
                      description: актуальность
                  required:
                    - accountType
                    - account
                    - used
            required:
              - uid
              - name
              - accountList
      description: |-
        Ищет клиента по номеру телефона или коду и отправляет список родственных связей для предоставления клиенту доступа к своим счетам

        Ответственный  
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: брэнд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              phoneNumber:
                type: string
                description: номер телефона
              code:
                type: string
                description: код клиента
              uid:
                type: string
                description: идентификатор клиента
      tags:
        - Customers
    parameters: []
  /lists/availableInstallment:
    post:
      summary: Список схем рассрочки
      operationId: post-list-availableInstallment
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                uid:
                  type: string
                  description: идентификатор схемы рассрочки
                name:
                  type: string
                  description: наименование схемы рассрочки
                paymentSchedule:
                  type: array
                  description: схема оплаты
                  items:
                    type: object
                    properties:
                      amount:
                        type: number
                        description: сумма платежа
                      percent:
                        type: number
                        description: процент платежа
                      date:
                        type: string
                        format: date
                        description: дата платежа
                    required:
                      - amount
                      - percent
                      - date
              required:
                - uid
                - name
                - paymentSchedule
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          pattern: ''
          default: availableInstallment
          description: наименование запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык интерфейса клиента
        - type: string
          in: header
          name: brand
          required: true
          description: бренд
        - type: string
          in: header
          name: auth-key
          required: true
          description: ключи авторизации (токен)
        - in: body
          name: body
          schema:
            type: object
            properties:
              uid:
                type: string
                description: идентификатор номенклатуры
              gymId:
                type: string
                description: идентификатор клуба
              customerId:
                type: string
                description: идентификатор клиента
              giftList:
                type: array
                description: список подарков
                items:
                  type: object
                  properties:
                    uidGiftGroup:
                      type: string
                      description: Идентификатор группы подарков
                    uidDiscount:
                      type: string
                      description: идентификатор скидки
                    giftGroupList:
                      type: array
                      items:
                        type: object
                        properties:
                          giftUid:
                            type: string
                            description: идентификатор подарка
                          quantity:
                            type: number
                            description: выбранное количество
                          gymList:
                            type: array
                            description: массив идентификаторов клубов
                            items:
                              type: string
                        required:
                          - giftUid
                  required:
                    - uidGiftGroup
                    - uidDiscount
                    - giftGroupList
            required:
              - uid
              - gymId
              - customerId
          description: ''
      tags:
        - Lists
      description: |-
        Возвращает список доступных схем рассрочки
        Ответственный IT
    parameters: []
  /customers/getOfferData:
    post:
      summary: Получить данные для оферты (8.14)
      operationId: getOfferData
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              lastName:
                type: string
                description: Фамилия
              gender:
                type: string
                description: пол
                enum:
                  - male
              birthDate:
                type: string
                description: дата рождения
              email:
                type: string
                description: электронная почта
              documents:
                type: array
                description: документы
                items:
                  type: object
                  properties:
                    type:
                      type: object
                      description: тип документа
                      properties:
                        name:
                          type: string
                          description: наименование
                        uid:
                          type: string
                          description: идентификатор
                      required:
                        - name
                        - uid
                    fields:
                      type: array
                      description: поля для заполнения
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: имя поля
                          type:
                            type: string
                            description: 'тип поля(строка, дата и т.п.)'
                          required:
                            type: boolean
                            description: обязательность заполнения
                          value:
                            type: string
                            description: значение
                          uid:
                            type: string
                            description: идентификатор

                          order:
                            type: integer
                            description: порядок
                        required:
                          - name
                          - type
                          - required
                          - value
                          - uid
                    order:
                      type: integer
                      description: порядок
                  required:
                    - fields
                    - order
              address:
                type: string
                description: адрес
            required:
              - firstName
              - lastName
              - gender
              - birthDate
              - documents
              - address
      tags:
        - Customers
      description: |-
        Получает данные из КПО для заполнения оферты при покупке контракта.
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: брэнд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
  /customers/changeOfferData:
    post:
      summary: Изменить данные оферты (8.14)
      operationId: changeOfferData
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - Ok
                  - fail
                description: успешно
            required:
              - result
      tags:
        - Customers
      description: |-
        Изменяет данные оферты в кпо, если клиент изменил на стороне приложения
        Ответственный 
      parameters:
        - type: string
          in: header
          name: content-type
          required: true
        - type: string
          in: header
          name: request
          required: true
          description: имя запроса
        - type: string
          in: header
          name: language
          required: true
          description: язык
        - type: string
          in: header
          name: brand
          required: true
          description: брэнд
        - type: string
          in: header
          name: auth-key
          required: true
          description: токен
        - in: body
          name: body
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: Имя
              secondName:
                type: string
                description: Отчество
              lastName:
                type: string
                description: Фамилия
              gender:
                type: string
                description: Пол
              birthDate:
                type: string
                description: Дата рождения
              email:
                type: string
                description: электронная почта
              documents:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: object
                      description: тип
                      required:
                        - name
                        - uid
                      properties:
                        name:
                          type: string
                          description: имя
                        uid:
                          type: string
                          description: идентификатор
                    fields:
                      type: array
                      description: поля для заполнения
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: имя поля
                          type:
                            type: string
                            description: тип поля
                          required:
                            type: boolean
                            description: обязательность заполнения
                          value:
                            type: string
                            description: значение
                          uid:
                            type: string
                            description: идентификатор
                        required:
                          - name
                          - type
                          - required
                          - value
                          - uid
                    order:
                      type: integer
                      description: порядок
                  required:
                    - type
                    - fields
                    - order
              address:
                type: string
                description: адрес
            required:
              - firstName
              - lastName
              - gender
              - birthDate
              - address
  /events/registrateEvent:
    post:
      summary: регистрация на мероприятие
      description: |-
        Выполняет регистрацию клиента на мероприятие – для ЛК клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Games
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: registrateEvent
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: string
                description: идентификатор мероприятия (Справочник.Игры.ГУИД)
              categoryId:
                type: string
                description: идентификатор категории мероприятия (Справочник.Игры.Категории.ГУИД)
              email:
                type: string
                description: e-mail клиента (сохраняется в карточке клиента)
              customerId:
                type: string
                description: идентифкатор клиента(для вэб)
            required:
              - eventId
          x-examples:
            example-1: {}
          description: ''
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат
                enum:
                  - Ok
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
              detailDescription:
                type: string
                description: подробное описание ошибки
      operationId: registrateEvent
    x-restlet:
      section: events
    parameters: []
  /lists/eventList:
    post:
      summary: список мероприятий
      description: |-
        Возвращает список мероприятий – для ЛК клиента

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Lists
        - Games
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: eventList
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              games:
                type: array
                description: массив с данными игр
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор мероприятия (Справочник.Игры.ГУИД)
                    name:
                      type: string
                      description: наименование мероприятия
                    eventDate:
                      type: string
                      format: date
                      description: дата мероприятия
                      example: '2019-07-01T00:00:00'
                    eventStartTime:
                      type: string
                      format: date
                      description: время начала мероприятия
                      example: '2019-07-01T13:00:00'
                    eventEndTime:
                      type: string
                      format: date
                      description: время окончания мероприятия
                      example: '2019-07-01T13:00:00'
                    regStartTime:
                      type: string
                      format: date
                      description: время начала регистрации на мероприятие
                      example: '2019-07-01T13:00:00'
                    regEndTime:
                      type: string
                      format: date
                      description: время окончания регистрации на мероприятие
                      example: '2019-07-01T13:00:00'
                    cityId:
                      type: string
                      description: сегмент клубов мероприятия
                    eventPlace:
                      type: string
                      description: место проведения мероприятия
                    isActive:
                      type: boolean
                      description: мероприятие активно
                    isTeam:
                      type: boolean
                      description: командное мероприятие
                    isOnline:
                      type: boolean
                      description: онлайн регистрация на мероприятие
                    multiplyRegistration:
                      type: boolean
                      description: множественная регистрация на мероприятие
                    description:
                      type: string
                      description: описание мероприятия
                    totalCount:
                      type: integer
                      description: количество участников мероприятия
                    availableCount:
                      type: integer
                      description: количество свободных мест мероприятия
                    participationRules:
                      type: string
                      description: правила участия группы мероприятий (Справочник.Игры.ПравилаУчастия)
                    registered:
                      type: boolean
                      description: клиент зарегистрирован на мероприятие / категорию мероприятия
                    registrationIsAvailable:
                      type: boolean
                      description: доступна регистрация клиента на мероприятие / категорию мероприятия
                    categories:
                      type: array
                      description: массив с данными категорий игры
                      items:
                        type: object
                        properties:
                          uid:
                            type: string
                            description: идентификатор категории мероприятия (Справочник.Игры.Категории.ГУИД)
                          name:
                            type: string
                            description: наименование категории мероприятия
                          sex:
                            type: string
                            description: пол
                          ageMin:
                            type: string
                            description: минимальный возраст
                          ageMax:
                            type: string
                            description: максимальный возраст
                          registered:
                            type: boolean
                            description: клиент зарегистрирован на категорию мероприятия
                          registrationIsAvailable:
                            type: boolean
                            description: доступна регистрация клиента на категорию мероприятия
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: events
    x-restlet:
      section: lists
    parameters: []
  /lists/eventListNew:
    post:
      summary: список мероприятий
      description: |-
        Возвращает список мероприятий – для ЛК клиента

        Ответственный  
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Lists
        - Games
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: eventListNew
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          schema:
            type: object
            properties:
              customerId:
                type: string
                description: идентификатор клиента (для вэб)
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              games:
                type: array
                description: массив с данными игр
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: идентификатор мероприятия (Справочник.Игры.ГУИД)
                    name:
                      type: string
                      description: наименование мероприятия
                    eventDate:
                      type: string
                      format: date
                      description: дата мероприятия
                      example: '2019-07-01T00:00:00'
                    eventStartTime:
                      type: string
                      format: date
                      description: время начала мероприятия
                      example: '2019-07-01T13:00:00'
                    eventEndTime:
                      type: string
                      format: date
                      description: время окончания мероприятия
                      example: '2019-07-01T13:00:00'
                    regStartTime:
                      type: string
                      format: date
                      description: время начала регистрации на мероприятие
                      example: '2019-07-01T13:00:00'
                    regEndTime:
                      type: string
                      format: date
                      description: время окончания регистрации на мероприятие
                      example: '2019-07-01T13:00:00'
                    cityId:
                      type: string
                      description: сегмент клубов мероприятия
                    eventPlace:
                      type: string
                      description: место проведения мероприятия
                    isActive:
                      type: boolean
                      description: мероприятие активно
                    isTeam:
                      type: boolean
                      description: командное мероприятие
                    isOnline:
                      type: boolean
                      description: онлайн регистрация на мероприятие
                    multiplyRegistration:
                      type: boolean
                      description: множественная регистрация на мероприятие
                    description:
                      type: string
                      description: описание мероприятия
                    totalCount:
                      type: integer
                      description: количество участников мероприятия
                    availableCount:
                      type: integer
                      description: количество свободных мест мероприятия
                    participationRules:
                      type: string
                      description: правила участия группы мероприятий (Справочник.Игры.ПравилаУчастия)
                    registered:
                      type: boolean
                      description: клиент зарегистрирован на мероприятие / категорию мероприятия
                    registrationIsAvailable:
                      type: boolean
                      description: доступна регистрация клиента на мероприятие / категорию мероприятия
                    registrationLink:
                      type: string
                    photo:
                      type: string
                      description: фото
                    photoList:
                      type: array
                      description: список URL фотографий
                      items:
                        type: string
                    tagList:
                      type: array
                      description: список тегов
                      items:
                        $ref: '#/definitions/tag'
                    categories:
                      type: array
                      description: массив с данными категорий игры
                      items:
                        type: object
                        properties:
                          uid:
                            type: string
                            description: идентификатор категории мероприятия (Справочник.Игры.Категории.ГУИД)
                          name:
                            type: string
                            description: наименование категории мероприятия
                          sex:
                            type: string
                            description: пол
                          ageMin:
                            type: integer
                            description: минимальный возраст
                          ageMax:
                            type: integer
                            description: максимальный возраст
                          registered:
                            type: boolean
                            description: клиент зарегистрирован на категорию мероприятия
                          registrationIsAvailable:
                            type: boolean
                            description: доступна регистрация клиента на категорию мероприятия
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: eventsListNew
    x-restlet:
      section: lists
    parameters: [ ]
  /customers/registrationList:
    post:
      summary: список мероприятий клиента - для МП сотрудника
      description: |-
        Возвращает список мероприятий клиента - для МП сотрудника

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Customers
        - Games
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: registrationList
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              currentTime:
                type: string
                format: date
                description: Текущая дата сеанса клиента
                example: '2019-07-01T13:00:00'
              barcode:
                type: string
                description: идентификатор клиента (штрих код или QR код)
            required:
              - currentTime
              - barcode
              - endDate
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат
                enum:
                  - Ok
                  - Fail
              description:
                type: string
                description: описание ошибки
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
                enum:
                  - CustomerNotFound
              description:
                type: string
                description: описание ошибки
      operationId: registrationList
    x-restlet:
      section: Customers
    parameters: []

  /payment/autoPayment:
    put:
      summary: провести автоплатеж
      operationId: autoPayment
      tags:
        - Payment
        - KPO
      consumes:
        - application/json
      description: |-
        Проводит атоматическое списание суммы с привязаной карты клиента
        Ответственный 
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              customerId:
                type: string
                description: идентификатор клиента
              amount:
                type: integer
                description: Сумма оплаты
              gymId:
                type: string
                description: Идентификатор клуба
              docList:
                type: array
                description: массив заявок на оплату
                items:
                  type: string
              card:
                type: string
                description: идентификатор карты
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - Ok
                  - fail
                description: успешно
            required:
              - result
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
    x-restlet:
     section: Customers
    parameters: [ ]

  /customers/bindRecaring:
    post:
      summary: привязать платежную карту к абонементу
      operationId: bindRecaring
      tags:
        - Payment
        - KPO
      consumes:
        - application/json
      description: |-
        Привязывает платежную карту к абонементу
        Ответственный 
      parameters:
        - $ref: '#/parameters/content-type'
        - $ref: '#/parameters/request'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              clubCardId:
                type: string
                description: идентификатор абонемента
              card:
                type: string
                description: идентификатор платежной карты
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - Ok
                  - fail
                description: успешно
            required:
              - result
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
    x-restlet:
      section: Customers
    parameters: [ ]

  /rooms/getRooms:
    post:
      summary: список помещений по клубу - для визуализации раздевалок
      operationId: getRooms
      description: |-
        список помещений по клубу - для визуализации раздевалок
        идентификатор клуба указывается в url: https://solutions.worldclass.ru/API/hs/external/{идентификатор клуба}
        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Rooms
        - KPO
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: rooms
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'

      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - roomName
                - roomid
              type: object
              properties:
                roomId:
                  type: string
                  description: идентификатор помещения
                  minLength: 36
                  maxLength: 36
                roomName:
                  type: string
                  description: наименование помещения
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
    x-restlet:
      section: Rooms
    parameters: [ ]

  /rooms/boxState:
    post:
      summary: состояние ячеек в помещении - для визуализации раздевалок
      description: |-
        состояние ячеек в помещении - для визуализации раздевалок

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Rooms
        - KPO
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: boxState
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'

      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              required:
                - gymId
                - roomid
                - boxId
                - state
              type: object
              properties:
                roomId:
                  type: string
                  description: идентификатор помещения
                  minLength: 36
                  maxLength: 36
                gymId:
                  type: string
                  description: идентификатор клуба
                  minLength: 36
                  maxLength: 36
                boxId:
                  type: string
                  description: идентификатор ячейки
                  minLength: 36
                  maxLength: 36
                state:
                  type: string

        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки

    x-restlet:
      section: Rooms
    parameters: [ ]

  /api/code/w23c2/idemployee:
    get:
      summary: проверка валидности ссылки на страницу сотрудника
      description: |-
        проверка валидности ссылки на страницу сотрудника в сервисе netMonet - сторонний сервис

        сервер: netmonet.co
        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - NetMonet
      parameters:
        - $ref: '#/parameters/content-type'

      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
              type: object
              properties:
                type:
                  type: string
                  description: тип сотрудника
                data:
                  type: object
                  description: данные сотрудника
                  properties:
                    id:
                      type: string
                      description: код сотрудника
                    firstName:
                      type: string
                      description: фамилия
                    lastName:
                      type: string
                      description: имя
                    wish:
                      type: string
                      description: пожелание
                    image:
                      type: string
                      description: ссылка на фото
                    workPlace:
                      type: string
                      description: место работы
                    workPlaceId:
                      type: string
                      description: идентификатор места работы
                    acquiringType:
                      type: string
                      description: тип платежной системы
                    udcPercent:
                      type: string
                      description: процент комиссии
        '404':
          description: Страница не найдена
          schema:
            type: object
            properties:
              errorType:
                type: string
                description: код ошибки
              message:
                type: string
                description: сообщение
    x-restlet:
      section: NetMonet
    parameters: [ ]
  /lists/bannerList:
    post:
      summary: список баннеров главной страницы
      description: |-
        По коду сети возвращает список баннеров фото и видео контента
        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Lists
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: bannerList
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - in: body
          name: body
          schema:
            type: object
            properties:
              chain:
                type: number
                description: код сети
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: array
            items:
              type: object
              properties:
                imageURL:
                  type: string
                  description: ссылка на фото
                videoURL:
                  type: string
                  description: ссылка на видео
                text:
                  type: string
                  description: текст баннера
                order:
                  type: number
                  description: порядок следования фото/видео
                externalUrl:
                  type: string
                  description: внешняя ссылка
                buttonText:
                  type: string
                  description: текст кнопки
                inNewApp:
                  type: boolean
                  description: признак показывать в новом приложении
        '404':
          description: Страница не найдена
          schema:
            type: object
            properties:
              errorType:
                type: string
                description: код ошибки
              message:
                type: string
                description: сообщение
    x-restlet:
      section: Lists
    parameters: [ ]

  /tip/w23c2/idemployee:
    get:
        summary: получение страницы сотрудника для чаевых
        description: |-
          получение страницы сотрудника для чаевых в сервисе netMonet - сторонний сервис

          сервер: netmonet.co
          Ответственный 
        consumes:
          - application/json
        produces:
          - application/json
        tags:
          - NetMonet
        parameters:
          - $ref: '#/parameters/content-type'

        responses:
          '200':
            description: Выполнение запроса завершилось успешно, возвращена html страница
          '404':
            description: Страница не найдена
    x-restlet:
     section: NetMonet
    parameters: [ ]

  /events/registrationConfirm:
    post:
      summary: подтверждение регистрации на мероприятие - для МП сотрудника
      description: |-
        Подтверждение регистрации на мероприятие - для МП сотрудника

        Ответственный 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Events
        - Games
      parameters:
        - $ref: '#/parameters/content-type'
        - name: request
          in: header
          type: string
          description: наименование запроса
          default: registrationConfirm
          required: true
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/brand'
        - $ref: '#/parameters/auth-key'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: string
                description: идентификатор мероприятия (Справочник.Игры.ГУИД)
              categoryId:
                type: string
                description: идентификатор категории мероприятия (Справочник.Игры.Категории.ГУИД)
              uid:
                type: string
                description: Идентификатор клиента (uid элемента справочника контрагенты)
            required:
              - eventId
              - categoryId
              - uid
      responses:
        '200':
          description: Выполнение запроса завершилось успешно
          schema:
            type: object
            properties:
              result:
                type: string
                description: результат
                enum:
                  - Ok
                  - Fail
              description:
                type: string
                description: описание ошибки
        '401':
          description: Пользователь не идентифицирован
          schema:
            type: object
            properties:
              result:
                type: string
                enum:
                  - userNotIdentified
              description:
                type: string
                default: User not identified
        '403':
          description: Выполнение запроса завершилось ошибкой
          schema:
            type: object
            properties:
              result:
                type: string
                description: код ошибки
              description:
                type: string
                description: описание ошибки
      operationId: registrationConfirm
    x-restlet:
      section: events
    parameters: []


definitions:
  countryCode:
    title: countryCode
    type: object
    properties:
      code:
        type: string
        example: '+7'
        description: код страны
      mask:
        type: string
        example: '(###) ###-##-##'
        description: маска телефонного номера
    required:
      - code
      - mask
  service:
    type: object
    description: Услуга/сегмент
    properties:
      name:
        type: string
        description: Наименование услуги/сегмента
      serviceType:
        type: string
        description: 'тип объекта: услуга или сегмент'
        enum:
          - service
          - package
      quantity:
        type: integer
        description: Количество услуг/сегментов
      entryList:
        type: array
        description: Состав услуги/сегмента
        items:
          type: object
          properties:
            uid:
              type: string
              description: Идентификатор услуги
            name:
              type: string
              description: Наименование услуги
            shortDescription:
              type: string
              description: Краткое описание услуги
            entryType:
              type: string
              description: 'Тип услуги: персональная тренировка или групповой урок или курс или урок'
              enum:
                - personal
                - group
                - course
                - lesson
            duration:
              type: number
              description: длительность услуги
            employeeKind:
              type: string
              description: категория сотрудника
            photo:
              type: string
              description: фотография
          required:
            - uid
            - entryType
    required:
      - name
      - serviceType
      - entryList
  tag:
    title: tag
    type: object
    properties:
      tag:
        type: string
        description: наименование
      weight:
        description: вес
        type: number
      level:
        description: уровень
        type: number
    required:
      - tag
      - weight
      - level
  cacheTypes:
    title: cacheTypes
    type: array
    description: Полный перечень типов кэша
    items:
      type: string
      enum:
        - availableServiceList
        - balance
        - bannerList
        - bonus
        - familyAccount
        - financialHistory
        - membershipInfo
        - nearestService
        - packageInfo
        - paymentPackage
        - rentedLockerList
        - support
        - fitness
        - spa
        - employees
        - forChildren
        - journal
        - personalBooking
        - courses
        - visitBooking
        - events
        - polls


parameters:

  content-type:
    name: content-type
    in: header
    required: true
    type: string
    default: application/json

  request:
    name: request
    in: header
    required: true
    type: string
    description: наименование запроса

  language:
    name: language
    in: header
    required: true
    type: string
    description: язык интерфейса клиента
    default: En
    enum:
      - Ru
      - En

  brand:
    name: brand
    in: header
    required: true
    type: string
    description: бренд
    default: WorldClass
    enum:
      - WorldClass
      - Fizkult
      - UFC
      - None

  auth-key:
    name: auth-key
    in: header
    required: false
    type: string
    description: ключ авторизации (токен)
